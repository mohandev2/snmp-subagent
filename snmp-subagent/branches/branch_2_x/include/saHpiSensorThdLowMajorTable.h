/*
 * (C) Copyright IBM Corp. 2005
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  This
 * file and program are licensed under a BSD style license.  See
 * the Copying file included with the OpenHPI distribution for
 * full licensing terms.
 *
 * Authors:
 *   David Judkovics  <djudkovi@us.ibm.com>
 *   Daniel de Araujo <ddearauj@us.ibm.com>
 *
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.array-user.conf,v 5.18.2.2 2004/02/09 18:21:47 rstory Exp $
 *
 * $Id$
 *
 * Yes, there is lots of code here that you might not use. But it is much
 * easier to remove code than to add it!
 */
#ifndef SAHPISENSORTHDLOWMAJORTABLE_H
#define SAHPISENSORTHDLOWMAJORTABLE_H

#ifdef __cplusplus
extern "C" {
#endif


#include <net-snmp/net-snmp-config.h>
#include <net-snmp/library/container.h>
#include <net-snmp/agent/table_array.h>

/** Index saHpiDomainId is external */
/** Index saHpiResourceId is external */
/** Index saHpiResourceIsHistorical is external */
/** Index saHpiSensorNum is external */

typedef struct saHpiSensorThdLowMajorTable_context_s {
	netsnmp_index index; /** THIS MUST BE FIRST!!! */

	/*************************************************************
	 * You can store data internally in this structure.
	 *
	 * TODO: You will probably have to fix a few types here...
	 */
	/** TODO: add storage for external index(s)! */
	/** TruthValue = ASN_INTEGER */
	long saHpiSensorThdLowMajorIsReadable;

	/** TruthValue = ASN_INTEGER */
	long saHpiSensorThdLowMajorIsWritable;

	/** SaHpiSensorReadingType = ASN_INTEGER */
	long saHpiSensorThdLowMajorType;

	/** SaHpiSensorReadingValue = ASN_OCTET_STR */
	unsigned char saHpiSensorThdLowMajorValue[SAHPI_SENSOR_BUFFER_LENGTH];
	long saHpiSensorThdLowMajorValue_len;

	/** TruthValue = ASN_INTEGER */
	long saHpiSensorThdLowMajorNonLinear;


	/*
	 * OR
	 *
	 * Keep a pointer to your data
	 */
	void * data;

	/*
	 *add anything else you want here
	 */

} saHpiSensorThdLowMajorTable_context;

/*
 * int set_table_ctrl_analog_mode()
 */
int set_table_sen_thds_low_major (saHpiSensorThdLowMajorTable_context *row_ctx);

/*
 * SaErrorT populate_sensor_max()
 */
SaErrorT populate_sen_thd_low_major(SaHpiSessionIdT sessionid, 
					    SaHpiRdrT *rdr_entry,
					    SaHpiRptEntryT *rpt_entry,
					    SaHpiSensorThresholdsT *sensor_thresholds);
SaErrorT clear_sen_thd_low_major(SaHpiDomainIdT domainId, 
                                SaHpiResourceIdT resourceId);

/*************************************************************
 * function declarations
 */
void init_saHpiSensorThdLowMajorTable(void);
void initialize_table_saHpiSensorThdLowMajorTable(void);
const saHpiSensorThdLowMajorTable_context * saHpiSensorThdLowMajorTable_get_by_idx(netsnmp_index *);
const saHpiSensorThdLowMajorTable_context * saHpiSensorThdLowMajorTable_get_by_idx_rs(netsnmp_index *,
										      int row_status);
int saHpiSensorThdLowMajorTable_get_value(netsnmp_request_info *, netsnmp_index *, netsnmp_table_request_info *);


/*************************************************************
 * oid declarations
 */
extern oid saHpiSensorThdLowMajorTable_oid[];
extern size_t saHpiSensorThdLowMajorTable_oid_len;

#define saHpiSensorThdLowMajorTable_TABLE_OID 1,3,6,1,4,1,18568,2,1,1,4,9,10

/* Number of table Indexes */
#define SEN_THD_LOW_MAJOR_IDX_NR 4
#define saHpiThdLoMajDomainId_INDEX 0
#define saHpiThdLoMajResourceEntryId_INDEX 1
#define saHpiThdLoMajResourceIsHistorical_INDEX 2
#define saHpiSensorThdLoMajNum_INDEX 3

/*************************************************************
 * column number definitions for table saHpiSensorThdLowMajorTable
 */
#define COLUMN_SAHPISENSORTHDLOWMAJORISREADABLE 1
#define COLUMN_SAHPISENSORTHDLOWMAJORISWRITABLE 2
#define COLUMN_SAHPISENSORTHDLOWMAJORTYPE 3
#define COLUMN_SAHPISENSORTHDLOWMAJORVALUE 4
#define COLUMN_SAHPISENSORTHDLOWMAJORNONLINEAR 5
#define saHpiSensorThdLowMajorTable_COL_MIN 1
#define saHpiSensorThdLowMajorTable_COL_MAX 5

/* comment out the following line if you don't handle SET-REQUEST for saHpiSensorThdLowMajorTable */
#define saHpiSensorThdLowMajorTable_SET_HANDLING

/* comment out the following line if you can't create new rows */
#define saHpiSensorThdLowMajorTable_ROW_CREATION

/* comment out the following line if you don't want the secondary index */
#define saHpiSensorThdLowMajorTable_IDX2

/* uncommend the following line if you allow modifications to an
 * active row */
/** define saHpiSensorThdLowMajorTable_CAN_MODIFY_ACTIVE_ROW */

#ifdef saHpiSensorThdLowMajorTable_SET_HANDLING

	int saHpiSensorThdLowMajorTable_extract_index( saHpiSensorThdLowMajorTable_context * ctx, netsnmp_index * hdr );

	void saHpiSensorThdLowMajorTable_set_reserve1( netsnmp_request_group * );
	void saHpiSensorThdLowMajorTable_set_reserve2( netsnmp_request_group * );
	void saHpiSensorThdLowMajorTable_set_action( netsnmp_request_group * );
	void saHpiSensorThdLowMajorTable_set_commit( netsnmp_request_group * );
	void saHpiSensorThdLowMajorTable_set_free( netsnmp_request_group * );
	void saHpiSensorThdLowMajorTable_set_undo( netsnmp_request_group * );

	saHpiSensorThdLowMajorTable_context * saHpiSensorThdLowMajorTable_duplicate_row( saHpiSensorThdLowMajorTable_context* );
	netsnmp_index * saHpiSensorThdLowMajorTable_delete_row( saHpiSensorThdLowMajorTable_context* );

	int saHpiSensorThdLowMajorTable_can_activate(saHpiSensorThdLowMajorTable_context *undo_ctx,
						     saHpiSensorThdLowMajorTable_context *row_ctx,
						     netsnmp_request_group * rg);
	int saHpiSensorThdLowMajorTable_can_deactivate(saHpiSensorThdLowMajorTable_context *undo_ctx,
						       saHpiSensorThdLowMajorTable_context *row_ctx,
						       netsnmp_request_group * rg);
	int saHpiSensorThdLowMajorTable_can_delete(saHpiSensorThdLowMajorTable_context *undo_ctx,
						   saHpiSensorThdLowMajorTable_context *row_ctx,
						   netsnmp_request_group * rg);


#ifdef saHpiSensorThdLowMajorTable_ROW_CREATION
	saHpiSensorThdLowMajorTable_context * saHpiSensorThdLowMajorTable_create_row( netsnmp_index* );
#endif
#endif

#ifdef saHpiSensorThdLowMajorTable_IDX2
	saHpiSensorThdLowMajorTable_context * saHpiSensorThdLowMajorTable_get( const char *name, int len );
#endif

#ifdef __cplusplus
};
#endif

#endif /** SAHPISENSORTHDLOWMAJORTABLE_H */
