/*
 * (C) Copyright IBM Corp. 2004
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  This
 * file and program are licensed under a BSD style license.  See
 * the Copying file included with the OpenHPI distribution for
 * full licensing terms.
 *
 * Authors:
 *   Konrad Rzeszutek <konradr@us.ibm.com>

 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.array-user.conf,v 5.18 2003/11/07 17:03:52 rstory Exp $
 *
 * $Id$
 *
 */
#ifndef SAHPISENSORTHDUPMAJORTABLE_H
#define SAHPISENSORTHDUPMAJORTABLE_H

#ifdef __cplusplus
extern "C"
{
#endif


#include <net-snmp/net-snmp-config.h>
#include <net-snmp/library/container.h>
#include <net-snmp/agent/table_array.h>
#include <SaHpi.h>
#include <hpiSubagent.h>


	/** Index saHpiDomainID is external */
	/** Index saHpiResourceID is external */
	/** Index saHpiSensorIndex is external */

  typedef struct saHpiSensorThdUpMajorTable_context_s
  {
    netsnmp_index index;

    /** TruthValue = ASN_INTEGER */
    long            saHpiSensorThdUpMajorIsReadable;
    
    /** TruthValue = ASN_INTEGER */
    long            saHpiSensorThdUpMajorIsWritable;
    
    /** TruthValue = ASN_INTEGER */
    long            saHpiSensorThdUpMajorIsFixed;
    
    /** INTEGER = ASN_INTEGER */
    long            saHpiSensorThdUpMajorValuesPresent;

    /** UNSIGNED32 = ASN_UNSIGNED */
    unsigned long   saHpiSensorThdUpMajorRaw;

	/** OCTETSTR = ASN_OCTET_STR */
    unsigned char
      saHpiSensorThdUpMajorInterpreted[SENSOR_THD_INTER_MAX];
    size_t saHpiSensorThdUpMajorInterpreted_len;



    long sensor_id;
    long resource_id;
    long domain_id;
    long hash;


  } saHpiSensorThdUpMajorTable_context;

/*************************************************************
 * function declarations
 */

  void initialize_table_saHpiSensorThdUpMajorTable (void);

  int
    delete_ThdUpMajor_row (SaHpiDomainIdT domain_id,
			       SaHpiResourceIdT resource_id,
			       SaHpiSensorNumT num);

  int populate_ThdUpMajor (SaHpiDomainIdT domain_id,
			       SaHpiResourceIdT resource_id,
			       SaHpiSensorNumT sensor_id,
			       SaHpiSensorThdDefnT *threshold_def,
			       SaHpiSensorReadingT * reading);


  int set_ThdUpMajor (saHpiSensorThdUpMajorTable_context *ctx);

  int
    saHpiSensorThdUpMajorTable_get_value (netsnmp_request_info *,
					      netsnmp_index *,
					      netsnmp_table_request_info *);


/*************************************************************
 * oid declarations
 */
  extern oid saHpiSensorThdUpMajorTable_oid[];
  extern size_t saHpiSensorThdUpMajorTable_oid_len;

#define saHpiSensorThdUpMajorTable_TABLE_OID hpiSensor_OID,11

/*************************************************************
 * column number definitions for table saHpiSensorThdUpMajorTable
 */
#define COLUMN_SAHPISENSORTHDUPMAJORISREADABLE 1
#define COLUMN_SAHPISENSORTHDUPMAJORISWRITABLE 2
#define COLUMN_SAHPISENSORTHDUPMAJORISFIXED 3
#define COLUMN_SAHPISENSORTHDUPMAJORVALUESPRESENT 4
#define COLUMN_SAHPISENSORTHDUPMAJORRAW 5
#define COLUMN_SAHPISENSORTHDUPMAJORINTERPRETED 6
#define saHpiSensorThdUpMajorTable_COL_MIN 1
#define saHpiSensorThdUpMajorTable_COL_MAX 6

  int
    saHpiSensorThdUpMajorTable_extract_index
    (saHpiSensorThdUpMajorTable_context * ctx, netsnmp_index * hdr);

  void saHpiSensorThdUpMajorTable_set_reserve1 (netsnmp_request_group *);
  void saHpiSensorThdUpMajorTable_set_reserve2 (netsnmp_request_group *);
  void saHpiSensorThdUpMajorTable_set_action (netsnmp_request_group *);
  void saHpiSensorThdUpMajorTable_set_commit (netsnmp_request_group *);
  void saHpiSensorThdUpMajorTable_set_free (netsnmp_request_group *);
  void saHpiSensorThdUpMajorTable_set_undo (netsnmp_request_group *);

    saHpiSensorThdUpMajorTable_context
    * saHpiSensorThdUpMajorTable_duplicate_row
    (saHpiSensorThdUpMajorTable_context *);
    netsnmp_index
    * saHpiSensorThdUpMajorTable_delete_row
    (saHpiSensorThdUpMajorTable_context *);

  int
    saHpiSensorThdUpMajorTable_can_delete
    (saHpiSensorThdUpMajorTable_context * undo_ctx,
     saHpiSensorThdUpMajorTable_context * row_ctx,
     netsnmp_request_group * rg);



    saHpiSensorThdUpMajorTable_context
    * saHpiSensorThdUpMajorTable_create_row (netsnmp_index *);

#ifdef __cplusplus
};
#endif

#endif /** SAHPISENSORTHDUPMAJORTABLE_H */
