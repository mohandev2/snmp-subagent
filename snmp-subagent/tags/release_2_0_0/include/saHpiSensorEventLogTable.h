/*
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.array-user.conf,v 5.18.2.2 2004/02/09 18:21:47 rstory Exp $
 *
 * $Id$
 *
 * Yes, there is lots of code here that you might not use. But it is much
 * easier to remove code than to add it!
 */
#ifndef SAHPISENSOREVENTLOGTABLE_H
#define SAHPISENSOREVENTLOGTABLE_H

#ifdef __cplusplus
extern "C" {
#endif

    
#include <net-snmp/net-snmp-config.h>
#include <net-snmp/library/container.h>
#include <net-snmp/agent/table_array.h>

        /** Index saHpiDomainId is external */
        /** Index saHpiResourceId is external */
        /** Index saHpiSensorNum is external */
        /** Index saHpiEventSeverity is external */
        /** Index saHpiSensorEventEntryId is external */

typedef struct saHpiSensorEventLogTable_context_s {
    netsnmp_index index; /** THIS MUST BE FIRST!!! */

    /*************************************************************
     * You can store data internally in this structure.
     *
     * TODO: You will probably have to fix a few types here...
     */
    /** TODO: add storage for external index(s)! */
        /** SaHpiTime = ASN_COUNTER64 */
    /** TODO: Is this type correct? */
            long saHpiSensorEventLogTimestamp;

        /** SaHpiSensorType = ASN_INTEGER */
            long saHpiSensorEventLogType;

        /** SaHpiEventCategory = ASN_INTEGER */
            long saHpiSensorEventLogCategory;

        /** TruthValue = ASN_INTEGER */
            long saHpiSensorEventLogAssertion;

        /** SaHpiEventState = ASN_OCTET_STR */
            unsigned char saHpiSensorEventLogState[65535];
            long saHpiSensorEventLogState_len;

        /** SaHpiOptionalData = ASN_OCTET_STR */
            unsigned char saHpiSensorEventLogOptionalData[65535];
            long saHpiSensorEventLogOptionalData_len;

        /** SaHpiSensorReadingType = ASN_INTEGER */
            long saHpiSensorEventLogTriggerReadingType;

        /** SaHpiSensorReadingValue = ASN_OCTET_STR */
            unsigned char saHpiSensorEventLogTriggerReading[65535];
            long saHpiSensorEventLogTriggerReading_len;

        /** SaHpiSensorReadingType = ASN_INTEGER */
            long saHpiSensorEventLogTriggerThresholdType;

        /** SaHpiSensorReadingValue = ASN_OCTET_STR */
            unsigned char saHpiSensorEventLogTriggerThreshold[65535];
            long saHpiSensorEventLogTriggerThreshold_len;

        /** SaHpiEventState = ASN_OCTET_STR */
            unsigned char saHpiSensorEventLogPreviousState[65535];
            long saHpiSensorEventLogPreviousState_len;

        /** SaHpiEventState = ASN_OCTET_STR */
            unsigned char saHpiSensorEventLogCurrentState[65535];
            long saHpiSensorEventLogCurrentState_len;

        /** UNSIGNED32 = ASN_UNSIGNED */
            unsigned long saHpiSensorEventLogOem;

        /** UNSIGNED32 = ASN_UNSIGNED */
            unsigned long saHpiSensorEventLogSpecific;


    /*
     * OR
     *
     * Keep a pointer to your data
     */
    void * data;

    /*
     *add anything else you want here
     */

} saHpiSensorEventLogTable_context;

/*************************************************************
 * function declarations
 */
void init_saHpiSensorEventLogTable(void);
void initialize_table_saHpiSensorEventLogTable(void);
const saHpiSensorEventLogTable_context * saHpiSensorEventLogTable_get_by_idx(netsnmp_index *);
const saHpiSensorEventLogTable_context * saHpiSensorEventLogTable_get_by_idx_rs(netsnmp_index *,
                                        int row_status);
int saHpiSensorEventLogTable_get_value(netsnmp_request_info *, netsnmp_index *, netsnmp_table_request_info *);


/*************************************************************
 * oid declarations
 */
extern oid saHpiSensorEventLogTable_oid[];
extern size_t saHpiSensorEventLogTable_oid_len;

#define saHpiSensorEventLogTable_TABLE_OID 1,3,6,1,4,1,18568,2,1,1,3,2,11
    
/*************************************************************
 * column number definitions for table saHpiSensorEventLogTable
 */
#define COLUMN_SAHPISENSOREVENTLOGTIMESTAMP 1
#define COLUMN_SAHPISENSOREVENTLOGTYPE 2
#define COLUMN_SAHPISENSOREVENTLOGCATEGORY 3
#define COLUMN_SAHPISENSOREVENTLOGASSERTION 4
#define COLUMN_SAHPISENSOREVENTLOGSTATE 5
#define COLUMN_SAHPISENSOREVENTLOGOPTIONALDATA 6
#define COLUMN_SAHPISENSOREVENTLOGTRIGGERREADINGTYPE 7
#define COLUMN_SAHPISENSOREVENTLOGTRIGGERREADING 8
#define COLUMN_SAHPISENSOREVENTLOGTRIGGERTHRESHOLDTYPE 9
#define COLUMN_SAHPISENSOREVENTLOGTRIGGERTHRESHOLD 10
#define COLUMN_SAHPISENSOREVENTLOGPREVIOUSSTATE 11
#define COLUMN_SAHPISENSOREVENTLOGCURRENTSTATE 12
#define COLUMN_SAHPISENSOREVENTLOGOEM 13
#define COLUMN_SAHPISENSOREVENTLOGSPECIFIC 14
#define saHpiSensorEventLogTable_COL_MIN 1
#define saHpiSensorEventLogTable_COL_MAX 14

/* comment out the following line if you don't handle SET-REQUEST for saHpiSensorEventLogTable */
#define saHpiSensorEventLogTable_SET_HANDLING

/* comment out the following line if you can't create new rows */
#define saHpiSensorEventLogTable_ROW_CREATION

/* comment out the following line if you don't want the secondary index */
#define saHpiSensorEventLogTable_IDX2

/* uncommend the following line if you allow modifications to an
 * active row */
/** define saHpiSensorEventLogTable_CAN_MODIFY_ACTIVE_ROW */

#ifdef saHpiSensorEventLogTable_SET_HANDLING

int saHpiSensorEventLogTable_extract_index( saHpiSensorEventLogTable_context * ctx, netsnmp_index * hdr );

void saHpiSensorEventLogTable_set_reserve1( netsnmp_request_group * );
void saHpiSensorEventLogTable_set_reserve2( netsnmp_request_group * );
void saHpiSensorEventLogTable_set_action( netsnmp_request_group * );
void saHpiSensorEventLogTable_set_commit( netsnmp_request_group * );
void saHpiSensorEventLogTable_set_free( netsnmp_request_group * );
void saHpiSensorEventLogTable_set_undo( netsnmp_request_group * );

saHpiSensorEventLogTable_context * saHpiSensorEventLogTable_duplicate_row( saHpiSensorEventLogTable_context* );
netsnmp_index * saHpiSensorEventLogTable_delete_row( saHpiSensorEventLogTable_context* );

int saHpiSensorEventLogTable_can_activate(saHpiSensorEventLogTable_context *undo_ctx,
                      saHpiSensorEventLogTable_context *row_ctx,
                      netsnmp_request_group * rg);
int saHpiSensorEventLogTable_can_deactivate(saHpiSensorEventLogTable_context *undo_ctx,
                        saHpiSensorEventLogTable_context *row_ctx,
                        netsnmp_request_group * rg);
int saHpiSensorEventLogTable_can_delete(saHpiSensorEventLogTable_context *undo_ctx,
                    saHpiSensorEventLogTable_context *row_ctx,
                    netsnmp_request_group * rg);
    
    
#ifdef saHpiSensorEventLogTable_ROW_CREATION
saHpiSensorEventLogTable_context * saHpiSensorEventLogTable_create_row( netsnmp_index* );
#endif
#endif

#ifdef saHpiSensorEventLogTable_IDX2
saHpiSensorEventLogTable_context * saHpiSensorEventLogTable_get( const char *name, int len );
#endif

#ifdef __cplusplus
};
#endif

#endif /** SAHPISENSOREVENTLOGTABLE_H */
