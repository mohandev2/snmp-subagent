/*
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.array-user.conf,v 5.18.2.2 2004/02/09 18:21:47 rstory Exp $
 *
 * $Id$
 *
 * Yes, there is lots of code here that you might not use. But it is much
 * easier to remove code than to add it!
 */
#ifndef SAHPIFIELDTABLE_H
#define SAHPIFIELDTABLE_H

#ifdef __cplusplus
extern "C" {
#endif

    
#include <net-snmp/net-snmp-config.h>
#include <net-snmp/library/container.h>
#include <net-snmp/agent/table_array.h>  

#include <saHpiAreaTable.h>

        /** Index saHpiDomainId is external */
        /** Index saHpiResourceId is external */
        /** Index saHpiResourceIsHistorical is external */
        /** Index saHpiInventoryId is external */
        /** Index saHpiAreaId is external */
        /** Index saHpiFieldId is internal */

typedef struct saHpiFieldTable_context_s {
    netsnmp_index index; /** THIS MUST BE FIRST!!! */

    /* flags used to tract data needed to create field */
     unsigned char field_type_set;
     unsigned char text_type_set;
     unsigned char text_language_set;
     unsigned char text_set;

    /*************************************************************
     * You can store data internally in this structure.
     *
     * TODO: You will probably have to fix a few types here...
     */
    /** TODO: add storage for external index(s)! */
        /** SaHpiInstrumentId = ASN_UNSIGNED */
            unsigned long saHpiFieldId;

        /** SaHpiInstrumentId = ASN_UNSIGNED */
            unsigned long saHpiFieldIdIndex;

        /** INTEGER = ASN_INTEGER */
            long saHpiFieldType;

        /** TruthValue = ASN_INTEGER */
            long saHpiFieldIsReadOnly;

        /** SaHpiTextType = ASN_INTEGER */
            long saHpiFieldTextType;

        /** SaHpiTextLanguage = ASN_INTEGER */
            long saHpiFieldTextLanguage;

        /** SaHpiText = ASN_OCTET_STR */
            unsigned char saHpiFieldText[SAHPI_MAX_TEXT_BUFFER_LENGTH];
            long saHpiFieldText_len;

        /** RowStatus = ASN_INTEGER */
            long saHpiFieldStatus;


    /*
     * OR
     *
     * Keep a pointer to your data
     */
    void * data;

    /*
     *add anything else you want here
     */

} saHpiFieldTable_context;

/*************************************************************
 * function declarations
 */
SaErrorT populate_field (SaHpiSessionIdT session_id, 
                         SaHpiRdrT *rdr_entry,
                         SaHpiRptEntryT *rpt_entry,
                         saHpiAreaTable_context *area_context);

/*************************************************************
 * function declarations
 */
void init_saHpiFieldTable(void);
void initialize_table_saHpiFieldTable(void);
const saHpiFieldTable_context * saHpiFieldTable_get_by_idx(netsnmp_index *);
const saHpiFieldTable_context * saHpiFieldTable_get_by_idx_rs(netsnmp_index *,
                                        int row_status);
int saHpiFieldTable_get_value(netsnmp_request_info *, netsnmp_index *, netsnmp_table_request_info *);


/*************************************************************
 * oid declarations
 */
extern oid saHpiFieldTable_oid[];
extern size_t saHpiFieldTable_oid_len;

#define saHpiFieldTable_TABLE_OID 1,3,6,1,4,1,18568,2,1,1,4,8,6

/* Number of table Indexes */
#define FIELD_INDEX_NR 6 
#define saHpiDomainId_INDEX 0
#define saHpiResourceEntryId_INDEX 1
#define saHpiResourceIsHistorical_INDEX 2
#define saHpiInventoryId_INDEX 3
#define saHpiAreaId_INDEX 4
#define saHpiFieldId_INDEX 5
    
/*************************************************************
 * column number definitions for table saHpiFieldTable
 */
#define COLUMN_SAHPIFIELDID 1
#define COLUMN_SAHPIFIELDIDINDEX 2
#define COLUMN_SAHPIFIELDTYPE 3
#define COLUMN_SAHPIFIELDISREADONLY 4
#define COLUMN_SAHPIFIELDTEXTTYPE 5
#define COLUMN_SAHPIFIELDTEXTLANGUAGE 6
#define COLUMN_SAHPIFIELDTEXT 7
#define COLUMN_SAHPIFIELDSTATUS 8
#define saHpiFieldTable_COL_MIN 3
#define saHpiFieldTable_COL_MAX 8

int saHpiFieldTable_extract_index( saHpiFieldTable_context * ctx, netsnmp_index * hdr );

void saHpiFieldTable_set_reserve1( netsnmp_request_group * );
void saHpiFieldTable_set_reserve2( netsnmp_request_group * );
void saHpiFieldTable_set_action( netsnmp_request_group * );
void saHpiFieldTable_set_commit( netsnmp_request_group * );
void saHpiFieldTable_set_free( netsnmp_request_group * );
void saHpiFieldTable_set_undo( netsnmp_request_group * );

saHpiFieldTable_context * saHpiFieldTable_duplicate_row( saHpiFieldTable_context* );
netsnmp_index * saHpiFieldTable_delete_row( saHpiFieldTable_context* );

int saHpiFieldTable_can_activate(saHpiFieldTable_context *undo_ctx,
                      saHpiFieldTable_context *row_ctx,
                      netsnmp_request_group * rg);
int saHpiFieldTable_can_deactivate(saHpiFieldTable_context *undo_ctx,
                        saHpiFieldTable_context *row_ctx,
                        netsnmp_request_group * rg);
int saHpiFieldTable_can_delete(saHpiFieldTable_context *undo_ctx,
                    saHpiFieldTable_context *row_ctx,
                    netsnmp_request_group * rg);
    
    
saHpiFieldTable_context * saHpiFieldTable_create_row( netsnmp_index* );

saHpiFieldTable_context * saHpiFieldTable_get( const char *name, int len );

#ifdef __cplusplus
};
#endif

#endif /** SAHPIFIELDTABLE_H */
