/*
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.array-user.conf,v 5.18.2.2 2004/02/09 18:21:47 rstory Exp $
 *
 * $Id$
 *
 * Yes, there is lots of code here that you might not use. But it is much
 * easier to remove code than to add it!
 */
#ifndef SAHPIDOMAINREFERENCETABLE_H
#define SAHPIDOMAINREFERENCETABLE_H

#ifdef __cplusplus
extern "C" {
#endif

    
#include <net-snmp/net-snmp-config.h>
#include <net-snmp/library/container.h>
#include <net-snmp/agent/table_array.h>

#include <SaHpi.h>

        /** Index saHpiDomainId is external */
        /** Index saHpiDomainRef is internal */
#define DOMAIN_REFERENCE_INDEX_NR	2        

typedef struct saHpiDomainReferenceTable_context_s {
    netsnmp_index index; /** THIS MUST BE FIRST!!! */

    /*************************************************************
     * You can store data internally in this structure.
     */
        /** SaHpiDomainId = ASN_UNSIGNED */
            unsigned long saHpiDomainRef;

        /** TruthValue = ASN_INTEGER */
            long saHpiDomainReferenceIsPeer;


    /*
     * OR
     *
     * Keep a pointer to your data
     */
    void * data;

    /*
     *add anything else you want here
     */

} saHpiDomainReferenceTable_context;

/*************************************************************
 * function declarations: OpenHpi
 */
int poplulate_saHpiDomainReferenceTable(SaHpiSessionIdT sessionid); 

/*************************************************************
 * function declarations
 */
void init_saHpiDomainReferenceTable(void);
void initialize_table_saHpiDomainReferenceTable(void);
const saHpiDomainReferenceTable_context * saHpiDomainReferenceTable_get_by_idx(netsnmp_index *);
const saHpiDomainReferenceTable_context * saHpiDomainReferenceTable_get_by_idx_rs(netsnmp_index *,
                                        int row_status);
int saHpiDomainReferenceTable_get_value(netsnmp_request_info *, netsnmp_index *, netsnmp_table_request_info *);

/*************************************************************
 * oid declarations scalars
 */
static oid saHpiDomainReferenceEntryCount_oid[] = { 1,3,6,1,4,1,18568,2,1,1,2,3 };

/*************************************************************
 * oid declarations Table
 */
extern oid saHpiDomainReferenceTable_oid[];
extern size_t saHpiDomainReferenceTable_oid_len;

#define saHpiDomainReferenceTable_TABLE_OID 1,3,6,1,4,1,18568,2,1,1,2,4
    
/*************************************************************
 * column number definitions for table saHpiDomainReferenceTable
 */
#define COLUMN_SAHPIDOMAINREF 1
#define COLUMN_SAHPIDOMAINREFERENCEISPEER 2
#define saHpiDomainReferenceTable_COL_MIN 2
#define saHpiDomainReferenceTable_COL_MAX 2

/* comment out the following line if you don't handle SET-REQUEST for saHpiDomainReferenceTable */
#define saHpiDomainReferenceTable_SET_HANDLING

/* comment out the following line if you can't create new rows */
#define saHpiDomainReferenceTable_ROW_CREATION

/* comment out the following line if you don't want the secondary index */
#define saHpiDomainReferenceTable_IDX2

/* uncommend the following line if you allow modifications to an
 * active row */
/** define saHpiDomainReferenceTable_CAN_MODIFY_ACTIVE_ROW */


int saHpiDomainReferenceTable_extract_index( saHpiDomainReferenceTable_context * ctx, netsnmp_index * hdr );

void saHpiDomainReferenceTable_set_reserve1( netsnmp_request_group * );
void saHpiDomainReferenceTable_set_reserve2( netsnmp_request_group * );
void saHpiDomainReferenceTable_set_action( netsnmp_request_group * );
void saHpiDomainReferenceTable_set_commit( netsnmp_request_group * );
void saHpiDomainReferenceTable_set_free( netsnmp_request_group * );
void saHpiDomainReferenceTable_set_undo( netsnmp_request_group * );

saHpiDomainReferenceTable_context * saHpiDomainReferenceTable_duplicate_row( saHpiDomainReferenceTable_context* );
netsnmp_index * saHpiDomainReferenceTable_delete_row( saHpiDomainReferenceTable_context* );

int saHpiDomainReferenceTable_can_activate(saHpiDomainReferenceTable_context *undo_ctx,
                      saHpiDomainReferenceTable_context *row_ctx,
                      netsnmp_request_group * rg);
int saHpiDomainReferenceTable_can_deactivate(saHpiDomainReferenceTable_context *undo_ctx,
                        saHpiDomainReferenceTable_context *row_ctx,
                        netsnmp_request_group * rg);
int saHpiDomainReferenceTable_can_delete(saHpiDomainReferenceTable_context *undo_ctx,
                    saHpiDomainReferenceTable_context *row_ctx,
                    netsnmp_request_group * rg);
   
saHpiDomainReferenceTable_context * saHpiDomainReferenceTable_create_row( netsnmp_index* );

#ifdef __cplusplus
};
#endif

#endif /** SAHPIDOMAINREFERENCETABLE_H */
