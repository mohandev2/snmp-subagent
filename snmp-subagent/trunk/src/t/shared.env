# (C) Copyright IBM Corp. 2003
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  This
# file and program are licensed under a BSD style license.  See
# the Copying file included with the OpenHPI distribution for
# full licensing terms.
#
# Authors:
#   Konrad Rzeszutek <konradr@us.ibm.com>
#
# $Id$ 
#

OPENHPI_CONF=`pwd`/openhpi.conf
SNMPD_CONF=`pwd`/snmpd.conf
HPI_SUBAGENT_CONF=`pwd`/hpiSubagent.conf
AGENTX_SOCKET="/var/agentx/master"

SNMPD_SOCKET="localhost:8374"
SNMPD_LOG_FILE=`pwd`/snmpd.log
SNMPD_ARGS="-V"
SNMPD_COMMUNITY="public"

HPI_SUBAGENT=`pwd`/../hpiSubagent
HPI_SUBAGENT_LOG_FILE=`pwd`/hpiSubagent.log

SNMPWALK=`which snmpwalk`
SNMPSET=`which snmpset`
export MIBDIRS=+`pwd`/../../mib
export MIBS=ALL

function q()
{
	if [ "$VERBOSE" == "yes" ]; then
		echo $*;
	fi
	$*
	if [ "$?" != 0 ]; then
		exit 1;
	fi
}

function dbg()
{
	if [ "$VERBOSE" == "yes" ]; then
		echo "--- $*";
	fi
}
function start_snmpd() 
{
		unset SNMPCONFPATH
		dbg "Starting NetSNMP."
		dbg "Logging output to $SNMPD_LOG_FILE"
		q $SNMPD_PATH -c $SNMPD_CONF -l $SNMPD_LOG_FILE $SNMPD_ARGS $SNMPD_SOCKET
	sleep 3	
}

function stop_snmpd()
{
	dbg "Killing NetSNMP daemon"
	kill -9 `ps -ef | grep $SNMPD_SOCKET | grep -v grep | awk '{print $2 }'` 2>/dev/null
}

function start_subagent()
{
	export SNMPCONFPATH=`pwd`
	export OPENHPI_CONF	
	dbg "Starting HPI Subagent."
	dbg "Logging output to $HPI_SUBAGENT_LOG_FILE"
	set | grep SNMP
	q $HPI_SUBAGENT -f -d -s 2> $HPI_SUBAGENT_LOG_FILE 1>/dev/null
	sleep 3
}

function stop_subagent()
{
	dbg "Killing HPI Subagent."
	kill -9 `ps -ef | grep $HPI_SUBAGENT  | grep -v grep | awk '{print $2}'` 2>/dev/null
}


function start()
{
	# you have to be root to run to NetSNMP
	# until NetSNMP 5.2 goes out with a fix for using UNIX domain sockets.
	dbg "Test $0"
	if [ `whoami` == "root" ]; then
		SNMPD_PATH=`which snmpd`;
		if [ "$SNMPD_PATH" == "" ]; then
			SNMPD_PATH="/usr/sbin/snmpd"
		fi
	else
		dbg "Must be root to run this test-case."
		exit 1
	fi

	if [ ! -x $HPI_SUBAGENT ]
	then
		dbg "$HPI_SUBAGENT is not executable."
		exit 1
	fi

	if [ ! -x $SNMPD_PATH ]
	then
		dbg "$SNMPD_PATH is not executable."
		exit 1
	fi	

	if [ ! -r $SNMPD_CONF ]
	then
		dbg "$SNMPD_CONF is not readable."
		exit 1
	fi

	if [ ! -r $OPENHPI_CONF  ]
	then
		dbg "$OPENHPI_CONF is not readable."
		exit 1
	fi

	if [ ! -r $HPI_SUBAGENT_CONF  ]
	then
		dbg "$HPI_SUBAGENT_CONF is not readable."
		exit 1
	fi

	if [ ! -x $SNMPWALK ]
	then
		dbg "$SNMPWALK is not exectuable."
		exit 1
	fi
	if [ ! -x $SNMPSET ]
	then
		dbg "$SNMPSET is not exectuable."
		exit 1
	fi
	stop_snmpd
	stop_subagent

	start_snmpd
	start_subagent
}


function check() 
{

	# check the $0.master with $0.result

	diff $0.master $0.result > $0.diff.log
	if [ "$?" != 0 ]; then
		dbg "Test failed." 
		if [ "$VERBOSE" == "yes" ]; then
			cat $0.diff.log
		fi
		exit 1
	else
		dbg "Test OK."
	fi
}
function stop()
{
	stop_subagent
	stop_snmpd
}
