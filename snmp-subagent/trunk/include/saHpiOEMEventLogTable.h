/*
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.array-user.conf,v 5.18.2.2 2004/02/09 18:21:47 rstory Exp $
 *
 * $Id$
 *
 * Yes, there is lots of code here that you might not use. But it is much
 * easier to remove code than to add it!
 */
#ifndef SAHPIOEMEVENTLOGTABLE_H
#define SAHPIOEMEVENTLOGTABLE_H

#ifdef __cplusplus
extern "C" {
#endif

    
#include <net-snmp/net-snmp-config.h>
#include <net-snmp/library/container.h>
#include <net-snmp/agent/table_array.h>

        /** Index saHpiDomainId is external */
        /** Index saHpiResourceId is external */
        /** Index saHpiEventSeverity is external */
        /** Index saHpiOEMEventEntryId is external */

typedef struct saHpiOEMEventLogTable_context_s {
    netsnmp_index index; /** THIS MUST BE FIRST!!! */

    /*************************************************************
     * You can store data internally in this structure.
     *
     * TODO: You will probably have to fix a few types here...
     */
    /** TODO: add storage for external index(s)! */
        /** SaHpiTime = ASN_COUNTER64 */
    /** TODO: Is this type correct? */
            long saHpiOEMEventLogTimestamp;

        /** SaHpiManufacturerId = ASN_UNSIGNED */
            unsigned long saHpiOEMEventLogManufacturerIdT;

        /** SaHpiTextType = ASN_INTEGER */
            long saHpiOEMEventLogTextType;

        /** SaHpiTextLanguage = ASN_INTEGER */
            long saHpiOEMEventLogTextLanguage;

        /** SaHpiText = ASN_OCTET_STR */
            unsigned char saHpiOEMEventLogText[65535];
            long saHpiOEMEventLogText_len;


    /*
     * OR
     *
     * Keep a pointer to your data
     */
    void * data;

    /*
     *add anything else you want here
     */

} saHpiOEMEventLogTable_context;

/*************************************************************
 * function declarations
 */
void init_saHpiOEMEventLogTable(void);
void initialize_table_saHpiOEMEventLogTable(void);
const saHpiOEMEventLogTable_context * saHpiOEMEventLogTable_get_by_idx(netsnmp_index *);
const saHpiOEMEventLogTable_context * saHpiOEMEventLogTable_get_by_idx_rs(netsnmp_index *,
                                        int row_status);
int saHpiOEMEventLogTable_get_value(netsnmp_request_info *, netsnmp_index *, netsnmp_table_request_info *);


/*************************************************************
 * oid declarations
 */
extern oid saHpiOEMEventLogTable_oid[];
extern size_t saHpiOEMEventLogTable_oid_len;

#define saHpiOEMEventLogTable_TABLE_OID 1,3,6,1,4,1,18568,2,1,1,3,2,26
    
/*************************************************************
 * column number definitions for table saHpiOEMEventLogTable
 */
#define COLUMN_SAHPIOEMEVENTLOGTIMESTAMP 1
#define COLUMN_SAHPIOEMEVENTLOGMANUFACTURERIDT 2
#define COLUMN_SAHPIOEMEVENTLOGTEXTTYPE 3
#define COLUMN_SAHPIOEMEVENTLOGTEXTLANGUAGE 4
#define COLUMN_SAHPIOEMEVENTLOGTEXT 5
#define saHpiOEMEventLogTable_COL_MIN 1
#define saHpiOEMEventLogTable_COL_MAX 5

/* comment out the following line if you don't handle SET-REQUEST for saHpiOEMEventLogTable */
#define saHpiOEMEventLogTable_SET_HANDLING

/* comment out the following line if you can't create new rows */
#define saHpiOEMEventLogTable_ROW_CREATION

/* comment out the following line if you don't want the secondary index */
#define saHpiOEMEventLogTable_IDX2

/* uncommend the following line if you allow modifications to an
 * active row */
/** define saHpiOEMEventLogTable_CAN_MODIFY_ACTIVE_ROW */

#ifdef saHpiOEMEventLogTable_SET_HANDLING

int saHpiOEMEventLogTable_extract_index( saHpiOEMEventLogTable_context * ctx, netsnmp_index * hdr );

void saHpiOEMEventLogTable_set_reserve1( netsnmp_request_group * );
void saHpiOEMEventLogTable_set_reserve2( netsnmp_request_group * );
void saHpiOEMEventLogTable_set_action( netsnmp_request_group * );
void saHpiOEMEventLogTable_set_commit( netsnmp_request_group * );
void saHpiOEMEventLogTable_set_free( netsnmp_request_group * );
void saHpiOEMEventLogTable_set_undo( netsnmp_request_group * );

saHpiOEMEventLogTable_context * saHpiOEMEventLogTable_duplicate_row( saHpiOEMEventLogTable_context* );
netsnmp_index * saHpiOEMEventLogTable_delete_row( saHpiOEMEventLogTable_context* );

int saHpiOEMEventLogTable_can_activate(saHpiOEMEventLogTable_context *undo_ctx,
                      saHpiOEMEventLogTable_context *row_ctx,
                      netsnmp_request_group * rg);
int saHpiOEMEventLogTable_can_deactivate(saHpiOEMEventLogTable_context *undo_ctx,
                        saHpiOEMEventLogTable_context *row_ctx,
                        netsnmp_request_group * rg);
int saHpiOEMEventLogTable_can_delete(saHpiOEMEventLogTable_context *undo_ctx,
                    saHpiOEMEventLogTable_context *row_ctx,
                    netsnmp_request_group * rg);
    
    
#ifdef saHpiOEMEventLogTable_ROW_CREATION
saHpiOEMEventLogTable_context * saHpiOEMEventLogTable_create_row( netsnmp_index* );
#endif
#endif

#ifdef saHpiOEMEventLogTable_IDX2
saHpiOEMEventLogTable_context * saHpiOEMEventLogTable_get( const char *name, int len );
#endif

#ifdef __cplusplus
};
#endif

#endif /** SAHPIOEMEVENTLOGTABLE_H */
