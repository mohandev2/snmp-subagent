/*
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.array-user.conf,v 5.18.2.2 2004/02/09 18:21:47 rstory Exp $
 *
 * $Id$
 *
 * Yes, there is lots of code here that you might not use. But it is much
 * easier to remove code than to add it!
 */
#ifndef SAHPIUSEREVENTLOGTABLE_H
#define SAHPIUSEREVENTLOGTABLE_H

#ifdef __cplusplus
extern "C" {
#endif

    
#include <net-snmp/net-snmp-config.h>
#include <net-snmp/library/container.h>
#include <net-snmp/agent/table_array.h>

        /** Index saHpiDomainId is external */
        /** Index saHpiEventSeverity is external */
        /** Index saHpiUserEventEntryId is external */

typedef struct saHpiUserEventLogTable_context_s {
    netsnmp_index index; /** THIS MUST BE FIRST!!! */

    /* flags used to tract data needed to create OEM Event */
     unsigned char timestamp_set;
     unsigned char text_type_set;
     unsigned char text_language_set;
     unsigned char text_set;
     unsigned char saHpiEventAdd_called;


    /*************************************************************
     * You can store data internally in this structure.
     *
     * TODO: You will probably have to fix a few types here...
     */
    /** TODO: add storage for external index(s)! */
        /** SaHpiTime = ASN_COUNTER64 */
    /** TODO: Is this type correct? */
            long saHpiUserEventLogTimestamp;

        /** SaHpiTextType = ASN_INTEGER */
            long saHpiUserEventLogTextType;

        /** SaHpiTextLanguage = ASN_INTEGER */
            long saHpiUserEventLogTextLanguage;

        /** SaHpiText = ASN_OCTET_STR */
            unsigned char saHpiUserEventLogText[SAHPI_MAX_TEXT_BUFFER_LENGTH];
            long saHpiUserEventLogText_len;

        /** RowStatus = ASN_INTEGER */
            long saHpiUserEventLogRowStatus;


    /*
     * OR
     *
     * Keep a pointer to your data
     */
    void * data;

    /*
     *add anything else you want here
     */

} saHpiUserEventLogTable_context;

/*************************************************************
 * function declarations
 */
void init_saHpiUserEventLogTable(void);
void initialize_table_saHpiUserEventLogTable(void);
const saHpiUserEventLogTable_context * saHpiUserEventLogTable_get_by_idx(netsnmp_index *);
const saHpiUserEventLogTable_context * saHpiUserEventLogTable_get_by_idx_rs(netsnmp_index *,
                                        int row_status);
int saHpiUserEventLogTable_get_value(netsnmp_request_info *, netsnmp_index *, netsnmp_table_request_info *);


/*************************************************************
 * function declarations
 */
SaErrorT populate_saHpiUserEventLogTable(SaHpiSessionIdT sessionid, 
                                         SaHpiEventLogEntryT *event,
                                         oid * this_child_oid, 
                                         size_t *this_child_oid_len);

SaErrorT user_event_log_clear(SaHpiSessionIdT session_id, 
                              SaHpiResourceIdT resource_id,  
                              oid *saHpiEventLogRowPointer, 
                              size_t saHpiEventLogRowPointer_len);

int user_event_log_delete (saHpiUserEventLogTable_context *row_ctx);
int user_event_log_add (saHpiUserEventLogTable_context *row_ctx);

/*************************************************************
 * oid declarations
 */
extern oid saHpiUserEventLogTable_oid[];
extern size_t saHpiUserEventLogTable_oid_len;

#define saHpiUserEventLogTable_TABLE_OID 1,3,6,1,4,1,18568,2,1,1,3,2,29

/*************************************************************
 * defines included from hpiB0101_enums.h
 */
#define SAHPIUSEREVENTLOGROWSTATUS_ACTIVE	     1
#define SAHPIUSEREVENTLOGROWSTATUS_NOTINSERVICE      2
#define SAHPIUSEREVENTLOGROWSTATUS_NOTREADY	     3
#define SAHPIUSEREVENTLOGROWSTATUS_CREATEANDGO       4
#define SAHPIUSEREVENTLOGROWSTATUS_CREATEANDWAIT     5
#define SAHPIUSEREVENTLOGROWSTATUS_DESTROY	     6

/*************************************************************
 * column number definitions for table saHpiUserEventTable
 */
#define USER_EVENT_LOG_INDEX_NR 3 
#define saHpiDomainId_event_log_INDEX 0
#define saHpiEventSeverity_event_log_INDEX 1
#define saHpiUserEventEntryId_event_log_INDEX 2

    
/*************************************************************
 * column number definitions for table saHpiUserEventLogTable
 */
#define COLUMN_SAHPIUSEREVENTLOGTIMESTAMP 1
#define COLUMN_SAHPIUSEREVENTLOGTEXTTYPE 2
#define COLUMN_SAHPIUSEREVENTLOGTEXTLANGUAGE 3
#define COLUMN_SAHPIUSEREVENTLOGTEXT 4
#define COLUMN_SAHPIUSEREVENTLOGROWSTATUS 5
#define saHpiUserEventLogTable_COL_MIN 1
#define saHpiUserEventLogTable_COL_MAX 5

/* comment out the following line if you don't handle SET-REQUEST for saHpiUserEventLogTable */
#define saHpiUserEventLogTable_SET_HANDLING

/* comment out the following line if you can't create new rows */
#define saHpiUserEventLogTable_ROW_CREATION

/* comment out the following line if you don't want the secondary index */
#define saHpiUserEventLogTable_IDX2

/* uncommend the following line if you allow modifications to an
 * active row */
/** define saHpiUserEventLogTable_CAN_MODIFY_ACTIVE_ROW */

#ifdef saHpiUserEventLogTable_SET_HANDLING

int saHpiUserEventLogTable_extract_index( saHpiUserEventLogTable_context * ctx, netsnmp_index * hdr );

void saHpiUserEventLogTable_set_reserve1( netsnmp_request_group * );
void saHpiUserEventLogTable_set_reserve2( netsnmp_request_group * );
void saHpiUserEventLogTable_set_action( netsnmp_request_group * );
void saHpiUserEventLogTable_set_commit( netsnmp_request_group * );
void saHpiUserEventLogTable_set_free( netsnmp_request_group * );
void saHpiUserEventLogTable_set_undo( netsnmp_request_group * );

saHpiUserEventLogTable_context * saHpiUserEventLogTable_duplicate_row( saHpiUserEventLogTable_context* );
netsnmp_index * saHpiUserEventLogTable_delete_row( saHpiUserEventLogTable_context* );

int saHpiUserEventLogTable_can_activate(saHpiUserEventLogTable_context *undo_ctx,
                      saHpiUserEventLogTable_context *row_ctx,
                      netsnmp_request_group * rg);
int saHpiUserEventLogTable_can_deactivate(saHpiUserEventLogTable_context *undo_ctx,
                        saHpiUserEventLogTable_context *row_ctx,
                        netsnmp_request_group * rg);
int saHpiUserEventLogTable_can_delete(saHpiUserEventLogTable_context *undo_ctx,
                    saHpiUserEventLogTable_context *row_ctx,
                    netsnmp_request_group * rg);
    
    
#ifdef saHpiUserEventLogTable_ROW_CREATION
saHpiUserEventLogTable_context * saHpiUserEventLogTable_create_row( netsnmp_index* );
#endif
#endif

#ifdef saHpiUserEventLogTable_IDX2
saHpiUserEventLogTable_context * saHpiUserEventLogTable_get( const char *name, int len );
#endif

#ifdef __cplusplus
};
#endif

#endif /** SAHPIUSEREVENTLOGTABLE_H */
