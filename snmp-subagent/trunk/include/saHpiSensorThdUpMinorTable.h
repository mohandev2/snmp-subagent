/*
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.array-user.conf,v 5.18.2.2 2004/02/09 18:21:47 rstory Exp $
 *
 * $Id$
 *
 * Yes, there is lots of code here that you might not use. But it is much
 * easier to remove code than to add it!
 */
#ifndef SAHPISENSORTHDUPMINORTABLE_H
#define SAHPISENSORTHDUPMINORTABLE_H

#ifdef __cplusplus
extern "C" {
#endif


#include <net-snmp/net-snmp-config.h>
#include <net-snmp/library/container.h>
#include <net-snmp/agent/table_array.h>

/** Index saHpiDomainId is external */
/** Index saHpiResourceId is external */
/** Index saHpiResourceIsHistorical is external */
/** Index saHpiSensorNum is external */

typedef struct saHpiSensorThdUpMinorTable_context_s {
        netsnmp_index index; /** THIS MUST BE FIRST!!! */

        /*************************************************************
         * You can store data internally in this structure.
         *
         * TODO: You will probably have to fix a few types here...
         */
        /** TODO: add storage for external index(s)! */
        /** TruthValue = ASN_INTEGER */
        long saHpiSensorThdUpMinorIsReadable;

        /** TruthValue = ASN_INTEGER */
        long saHpiSensorThdUpMinorIsWritable;

        /** SaHpiSensorReadingType = ASN_INTEGER */
        long saHpiSensorThdUpMinorType;

        /** SaHpiSensorReadingValue = ASN_OCTET_STR */
        unsigned char saHpiSensorThdUpMinorValue[SAHPI_SENSOR_BUFFER_LENGTH];
        long saHpiSensorThdUpMinorValue_len;

        /** TruthValue = ASN_INTEGER */
        long saHpiSensorThdUpMinorNonLinear;


        /*
         * OR
         *
         * Keep a pointer to your data
         */
        void * data;

        /*
         *add anything else you want here
         */

} saHpiSensorThdUpMinorTable_context;


/*************************************************************
 * function declarations
 */
SaErrorT populate_sen_thd_up_minor(SaHpiSessionIdT sessionid, 
                                           SaHpiRdrT *rdr_entry,
                                           SaHpiRptEntryT *rpt_entry,
                                           SaHpiSensorThresholdsT *sensor_thresholds);
SaErrorT clear_sen_thd_up_minor(SaHpiDomainIdT domainId, 
                                SaHpiResourceIdT resourceId);
int set_table_sen_thds_up_minor (saHpiSensorThdUpMinorTable_context *row_ctx);

/*************************************************************
 * function declarations
 */
void init_saHpiSensorThdUpMinorTable(void);
void initialize_table_saHpiSensorThdUpMinorTable(void);
const saHpiSensorThdUpMinorTable_context * saHpiSensorThdUpMinorTable_get_by_idx(netsnmp_index *);
const saHpiSensorThdUpMinorTable_context * saHpiSensorThdUpMinorTable_get_by_idx_rs(netsnmp_index *,
                                                                                    int row_status);
int saHpiSensorThdUpMinorTable_get_value(netsnmp_request_info *, netsnmp_index *, netsnmp_table_request_info *);


/*************************************************************
 * oid declarations
 */
extern oid saHpiSensorThdUpMinorTable_oid[];
extern size_t saHpiSensorThdUpMinorTable_oid_len;

#define saHpiSensorThdUpMinorTable_TABLE_OID 1,3,6,1,4,1,18568,2,1,1,4,9,14

/* Number of table Indexes */
#define SEN_THD_UP_MINOR_IDX_NR 4
#define saHpiThdUpMinDomainId_INDEX 0
#define saHpiThdUpMinResourceEntryId_INDEX 1
#define saHpiThdUpMinResourceIsHistorical_INDEX 2
#define saHpiSensorThdUpMinNum_INDEX 3

/*************************************************************
 * column number definitions for table saHpiSensorThdUpMinorTable
 */
#define COLUMN_SAHPISENSORTHDUPMINORISREADABLE 1
#define COLUMN_SAHPISENSORTHDUPMINORISWRITABLE 2
#define COLUMN_SAHPISENSORTHDUPMINORTYPE 3
#define COLUMN_SAHPISENSORTHDUPMINORVALUE 4
#define COLUMN_SAHPISENSORTHDUPMINORNONLINEAR 5
#define saHpiSensorThdUpMinorTable_COL_MIN 1
#define saHpiSensorThdUpMinorTable_COL_MAX 5

int saHpiSensorThdUpMinorTable_extract_index( saHpiSensorThdUpMinorTable_context * ctx, netsnmp_index * hdr );

void saHpiSensorThdUpMinorTable_set_reserve1( netsnmp_request_group * );
void saHpiSensorThdUpMinorTable_set_reserve2( netsnmp_request_group * );
void saHpiSensorThdUpMinorTable_set_action( netsnmp_request_group * );
void saHpiSensorThdUpMinorTable_set_commit( netsnmp_request_group * );
void saHpiSensorThdUpMinorTable_set_free( netsnmp_request_group * );
void saHpiSensorThdUpMinorTable_set_undo( netsnmp_request_group * );

saHpiSensorThdUpMinorTable_context * saHpiSensorThdUpMinorTable_duplicate_row( saHpiSensorThdUpMinorTable_context* );
netsnmp_index * saHpiSensorThdUpMinorTable_delete_row( saHpiSensorThdUpMinorTable_context* );

int saHpiSensorThdUpMinorTable_can_activate(saHpiSensorThdUpMinorTable_context *undo_ctx,
                                            saHpiSensorThdUpMinorTable_context *row_ctx,
                                            netsnmp_request_group * rg);
int saHpiSensorThdUpMinorTable_can_deactivate(saHpiSensorThdUpMinorTable_context *undo_ctx,
                                              saHpiSensorThdUpMinorTable_context *row_ctx,
                                              netsnmp_request_group * rg);
int saHpiSensorThdUpMinorTable_can_delete(saHpiSensorThdUpMinorTable_context *undo_ctx,
                                          saHpiSensorThdUpMinorTable_context *row_ctx,
                                          netsnmp_request_group * rg);


saHpiSensorThdUpMinorTable_context * saHpiSensorThdUpMinorTable_create_row( netsnmp_index* );

saHpiSensorThdUpMinorTable_context * saHpiSensorThdUpMinorTable_get( const char *name, int len );

#ifdef __cplusplus
};
#endif

#endif /** SAHPISENSORTHDUPMINORTABLE_H */
