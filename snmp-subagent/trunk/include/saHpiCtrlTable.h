/*
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.array-user.conf,v 5.18.2.2 2004/02/09 18:21:47 rstory Exp $
 *
 * $Id$
 *
 * Yes, there is lots of code here that you might not use. But it is much
 * easier to remove code than to add it!
 */
#ifndef SAHPICTRLTABLE_H
#define SAHPICTRLTABLE_H

#ifdef __cplusplus
extern "C" {
#endif

    
#include <net-snmp/net-snmp-config.h>
#include <net-snmp/library/container.h>
#include <net-snmp/agent/table_array.h>

        /** Index saHpiDomainId is external */
        /** Index saHpiResourceId is external */
        /** Index saHpiCtrlNum is internal */

typedef struct saHpiCtrlTable_context_s {
    netsnmp_index index; /** THIS MUST BE FIRST!!! */

    /*************************************************************
     * You can store data internally in this structure.
     *
     * TODO: You will probably have to fix a few types here...
     */
    /** TODO: add storage for external index(s)! */
        /** SaHpiInstrumentId = ASN_UNSIGNED */
            unsigned long saHpiCtrlNum;

        /** INTEGER = ASN_INTEGER */
            long saHpiCtrlOutputType;

        /** INTEGER = ASN_INTEGER */
            long saHpiCtrlType;

        /** INTEGER = ASN_INTEGER */
            long saHpiCtrlMode;

        /** TruthValue = ASN_INTEGER */
            long saHpiCtrlReadOnly;

        /** TruthValue = ASN_INTEGER */
            long saHpiCtrlWriteOnly;

        /** OCTETSTR = ASN_OCTET_STR */
            unsigned char saHpiCtrlState[65535];
            long saHpiCtrlState_len;

        /** OCTETSTR = ASN_OCTET_STR */
            unsigned char saHpiCtrlData[65535];
            long saHpiCtrlData_len;

        /** UNSIGNED32 = ASN_UNSIGNED */
            unsigned long saHpiCtrlOem;

        /** SaHpiTextType = ASN_INTEGER */
            long saHpiCtrlTextType;

        /** SaHpiTextLanguage = ASN_INTEGER */
            long saHpiCtrlTextLanguage;

        /** OCTETSTR = ASN_OCTET_STR */
            unsigned char saHpiCtrlText[65535];
            long saHpiCtrlText_len;

        /** RowPointer = ASN_OBJECT_ID */
            oid saHpiCtrlRDR[MAX_OID_LEN];
            long saHpiCtrlRDR_len;


    /*
     * OR
     *
     * Keep a pointer to your data
     */
    void * data;

    /*
     *add anything else you want here
     */

} saHpiCtrlTable_context;

/*************************************************************
 * function declarations
 */
void init_saHpiCtrlTable(void);
void initialize_table_saHpiCtrlTable(void);
const saHpiCtrlTable_context * saHpiCtrlTable_get_by_idx(netsnmp_index *);
const saHpiCtrlTable_context * saHpiCtrlTable_get_by_idx_rs(netsnmp_index *,
                                        int row_status);
int saHpiCtrlTable_get_value(netsnmp_request_info *, netsnmp_index *, netsnmp_table_request_info *);


/*************************************************************
 * oid declarations
 */
extern oid saHpiCtrlTable_oid[];
extern size_t saHpiCtrlTable_oid_len;

#define saHpiCtrlTable_TABLE_OID 1,3,6,1,4,1,18568,1,1,1,6,3,4
    
/*************************************************************
 * column number definitions for table saHpiCtrlTable
 */
#define COLUMN_SAHPICTRLNUM 1
#define COLUMN_SAHPICTRLOUTPUTTYPE 2
#define COLUMN_SAHPICTRLTYPE 3
#define COLUMN_SAHPICTRLMODE 4
#define COLUMN_SAHPICTRLREADONLY 5
#define COLUMN_SAHPICTRLWRITEONLY 6
#define COLUMN_SAHPICTRLSTATE 7
#define COLUMN_SAHPICTRLDATA 8
#define COLUMN_SAHPICTRLOEM 9
#define COLUMN_SAHPICTRLTEXTTYPE 10
#define COLUMN_SAHPICTRLTEXTLANGUAGE 11
#define COLUMN_SAHPICTRLTEXT 12
#define COLUMN_SAHPICTRLRDR 13
#define saHpiCtrlTable_COL_MIN 1
#define saHpiCtrlTable_COL_MAX 13

/* comment out the following line if you don't handle SET-REQUEST for saHpiCtrlTable */
#define saHpiCtrlTable_SET_HANDLING

/* comment out the following line if you can't create new rows */
#define saHpiCtrlTable_ROW_CREATION

/* comment out the following line if you don't want the secondary index */
#define saHpiCtrlTable_IDX2

/* uncommend the following line if you allow modifications to an
 * active row */
/** define saHpiCtrlTable_CAN_MODIFY_ACTIVE_ROW */

#ifdef saHpiCtrlTable_SET_HANDLING

int saHpiCtrlTable_extract_index( saHpiCtrlTable_context * ctx, netsnmp_index * hdr );

void saHpiCtrlTable_set_reserve1( netsnmp_request_group * );
void saHpiCtrlTable_set_reserve2( netsnmp_request_group * );
void saHpiCtrlTable_set_action( netsnmp_request_group * );
void saHpiCtrlTable_set_commit( netsnmp_request_group * );
void saHpiCtrlTable_set_free( netsnmp_request_group * );
void saHpiCtrlTable_set_undo( netsnmp_request_group * );

saHpiCtrlTable_context * saHpiCtrlTable_duplicate_row( saHpiCtrlTable_context* );
netsnmp_index * saHpiCtrlTable_delete_row( saHpiCtrlTable_context* );

int saHpiCtrlTable_can_activate(saHpiCtrlTable_context *undo_ctx,
                      saHpiCtrlTable_context *row_ctx,
                      netsnmp_request_group * rg);
int saHpiCtrlTable_can_deactivate(saHpiCtrlTable_context *undo_ctx,
                        saHpiCtrlTable_context *row_ctx,
                        netsnmp_request_group * rg);
int saHpiCtrlTable_can_delete(saHpiCtrlTable_context *undo_ctx,
                    saHpiCtrlTable_context *row_ctx,
                    netsnmp_request_group * rg);
    
    
#ifdef saHpiCtrlTable_ROW_CREATION
saHpiCtrlTable_context * saHpiCtrlTable_create_row( netsnmp_index* );
#endif
#endif

#ifdef saHpiCtrlTable_IDX2
saHpiCtrlTable_context * saHpiCtrlTable_get( const char *name, int len );
#endif

#ifdef __cplusplus
};
#endif

#endif /** SAHPICTRLTABLE_H */
