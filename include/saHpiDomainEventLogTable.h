/*
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.array-user.conf,v 5.18.2.2 2004/02/09 18:21:47 rstory Exp $
 *
 * $Id$
 *
 * Yes, there is lots of code here that you might not use. But it is much
 * easier to remove code than to add it!
 */
#ifndef SAHPIDOMAINEVENTLOGTABLE_H
#define SAHPIDOMAINEVENTLOGTABLE_H

#ifdef __cplusplus
extern "C" {
#endif

    
#include <net-snmp/net-snmp-config.h>
#include <net-snmp/library/container.h>
#include <net-snmp/agent/table_array.h>

        /** Index saHpiDomainId is external */
        /** Index saHpiDomainEventEntryId is external */
        /** Index saHpiEventSeverity is external */

typedef struct saHpiDomainEventLogTable_context_s {
    netsnmp_index index; /** THIS MUST BE FIRST!!! */

    /*************************************************************
     * You can store data internally in this structure.
     *
     * TODO: You will probably have to fix a few types here...
     */
    /** TODO: add storage for external index(s)! */
        /** SaHpiEntryId = ASN_UNSIGNED */
            unsigned long saHpiDomainEventLogEntryId;

        /** SaHpiTime = ASN_COUNTER64 */
    /** TODO: Is this type correct? */
            long saHpiDomainEventLogTimestamp;

        /** INTEGER = ASN_INTEGER */
            long saHpiDomainEventLogType;


    /*
     * OR
     *
     * Keep a pointer to your data
     */
    void * data;

    /*
     *add anything else you want here
     */

} saHpiDomainEventLogTable_context;

/*************************************************************
 * function declarations
 */
void init_saHpiDomainEventLogTable(void);
void initialize_table_saHpiDomainEventLogTable(void);
const saHpiDomainEventLogTable_context * saHpiDomainEventLogTable_get_by_idx(netsnmp_index *);
const saHpiDomainEventLogTable_context * saHpiDomainEventLogTable_get_by_idx_rs(netsnmp_index *,
                                        int row_status);
int saHpiDomainEventLogTable_get_value(netsnmp_request_info *, netsnmp_index *, netsnmp_table_request_info *);


/*************************************************************
 * function declarations
 */
SaErrorT populate_saHpiDomainEventLogTable(SaHpiSessionIdT sessionid, 
                                            SaHpiEventLogEntryT *event,
                                            oid * this_child_oid, 
                                            size_t *this_child_oid_len);
					    
/*************************************************************
 * oid declarations
 */
extern oid saHpiDomainEventLogTable_oid[];
extern size_t saHpiDomainEventLogTable_oid_len;

#define saHpiDomainEventLogTable_TABLE_OID 1,3,6,1,4,1,18568,2,1,1,3,2,8
    
/*************************************************************
 * column number definitions for table saHpiDomainEventLogTable
 */
#define DOMAIN_EVENT_LOG_INDEX_NR 3
#define COLUMN_SAHPIDOMAINEVENTLOGENTRYID 1
#define COLUMN_SAHPIDOMAINEVENTLOGTIMESTAMP 2
#define COLUMN_SAHPIDOMAINEVENTLOGTYPE 3
#define saHpiDomainEventLogTable_COL_MIN 2
#define saHpiDomainEventLogTable_COL_MAX 3

/* comment out the following line if you don't handle SET-REQUEST for saHpiDomainEventLogTable */
#define saHpiDomainEventLogTable_SET_HANDLING

/* comment out the following line if you can't create new rows */
#define saHpiDomainEventLogTable_ROW_CREATION

/* comment out the following line if you don't want the secondary index */
#define saHpiDomainEventLogTable_IDX2

#ifdef saHpiDomainEventLogTable_SET_HANDLING

int saHpiDomainEventLogTable_extract_index( saHpiDomainEventLogTable_context * ctx, netsnmp_index * hdr );

void saHpiDomainEventLogTable_set_reserve1( netsnmp_request_group * );
void saHpiDomainEventLogTable_set_reserve2( netsnmp_request_group * );
void saHpiDomainEventLogTable_set_action( netsnmp_request_group * );
void saHpiDomainEventLogTable_set_commit( netsnmp_request_group * );
void saHpiDomainEventLogTable_set_free( netsnmp_request_group * );
void saHpiDomainEventLogTable_set_undo( netsnmp_request_group * );

saHpiDomainEventLogTable_context * saHpiDomainEventLogTable_duplicate_row( saHpiDomainEventLogTable_context* );
netsnmp_index * saHpiDomainEventLogTable_delete_row( saHpiDomainEventLogTable_context* );

int saHpiDomainEventLogTable_can_delete(saHpiDomainEventLogTable_context *undo_ctx,
                    saHpiDomainEventLogTable_context *row_ctx,
                    netsnmp_request_group * rg);
    
    
#ifdef saHpiDomainEventLogTable_ROW_CREATION
saHpiDomainEventLogTable_context * saHpiDomainEventLogTable_create_row( netsnmp_index* );
#endif
#endif

#ifdef saHpiDomainEventLogTable_IDX2
saHpiDomainEventLogTable_context * saHpiDomainEventLogTable_get( const char *name, int len );
#endif

#ifdef __cplusplus
};
#endif

#endif /** SAHPIDOMAINEVENTLOGTABLE_H */
