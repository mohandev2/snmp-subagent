/*
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.array-user.conf,v 5.18.2.2 2004/02/09 18:21:47 rstory Exp $
 *
 * $Id$
 *
 * Yes, there is lots of code here that you might not use. But it is much
 * easier to remove code than to add it!
 */
#ifndef SAHPISENSORREADINGCURRENTTABLE_H
#define SAHPISENSORREADINGCURRENTTABLE_H

#ifdef __cplusplus
extern "C" {
#endif

    
#include <net-snmp/net-snmp-config.h>
#include <net-snmp/library/container.h>
#include <net-snmp/agent/table_array.h>

        /** Index saHpiDomainId is external */
        /** Index saHpiResourceId is external */
        /** Index saHpiSensorNum is external */

typedef struct saHpiSensorReadingCurrentTable_context_s {
    netsnmp_index index; /** THIS MUST BE FIRST!!! */

    /*************************************************************
     * You can store data internally in this structure.
     *
     * TODO: You will probably have to fix a few types here...
     */
    /** TODO: add storage for external index(s)! */
        /** TruthValue = ASN_INTEGER */
            long saHpiSensorReadingCurrentIsSupported;

        /** SaHpiSensorReadingType = ASN_INTEGER */
            long saHpiSensorReadingCurrentType;

        /** SaHpiSensorReadingValue = ASN_OCTET_STR */
            unsigned char saHpiSensorReadingCurrentValue[65535];
            long saHpiSensorReadingCurrentValue_len;

        /** SaHpiEventState = ASN_OCTET_STR */
            unsigned char saHpiSensorReadingCurrentEventState[65535];
            long saHpiSensorReadingCurrentEventState_len;


    /*
     * OR
     *
     * Keep a pointer to your data
     */
    void * data;

    /*
     *add anything else you want here
     */

} saHpiSensorReadingCurrentTable_context;

/*************************************************************
 * function declarations
 */
void init_saHpiSensorReadingCurrentTable(void);
void initialize_table_saHpiSensorReadingCurrentTable(void);
const saHpiSensorReadingCurrentTable_context * saHpiSensorReadingCurrentTable_get_by_idx(netsnmp_index *);
const saHpiSensorReadingCurrentTable_context * saHpiSensorReadingCurrentTable_get_by_idx_rs(netsnmp_index *,
                                        int row_status);
int saHpiSensorReadingCurrentTable_get_value(netsnmp_request_info *, netsnmp_index *, netsnmp_table_request_info *);


/*************************************************************
 * oid declarations
 */
extern oid saHpiSensorReadingCurrentTable_oid[];
extern size_t saHpiSensorReadingCurrentTable_oid_len;

#define saHpiSensorReadingCurrentTable_TABLE_OID 1,3,6,1,4,1,18568,1,1,1,6,3,7,1
    
/*************************************************************
 * column number definitions for table saHpiSensorReadingCurrentTable
 */
#define COLUMN_SAHPISENSORREADINGCURRENTISSUPPORTED 1
#define COLUMN_SAHPISENSORREADINGCURRENTTYPE 2
#define COLUMN_SAHPISENSORREADINGCURRENTVALUE 3
#define COLUMN_SAHPISENSORREADINGCURRENTEVENTSTATE 4
#define saHpiSensorReadingCurrentTable_COL_MIN 1
#define saHpiSensorReadingCurrentTable_COL_MAX 4

/* comment out the following line if you don't handle SET-REQUEST for saHpiSensorReadingCurrentTable */
#define saHpiSensorReadingCurrentTable_SET_HANDLING

/* comment out the following line if you can't create new rows */
#define saHpiSensorReadingCurrentTable_ROW_CREATION

/* comment out the following line if you don't want the secondary index */
#define saHpiSensorReadingCurrentTable_IDX2

/* uncommend the following line if you allow modifications to an
 * active row */
/** define saHpiSensorReadingCurrentTable_CAN_MODIFY_ACTIVE_ROW */

#ifdef saHpiSensorReadingCurrentTable_SET_HANDLING

int saHpiSensorReadingCurrentTable_extract_index( saHpiSensorReadingCurrentTable_context * ctx, netsnmp_index * hdr );

void saHpiSensorReadingCurrentTable_set_reserve1( netsnmp_request_group * );
void saHpiSensorReadingCurrentTable_set_reserve2( netsnmp_request_group * );
void saHpiSensorReadingCurrentTable_set_action( netsnmp_request_group * );
void saHpiSensorReadingCurrentTable_set_commit( netsnmp_request_group * );
void saHpiSensorReadingCurrentTable_set_free( netsnmp_request_group * );
void saHpiSensorReadingCurrentTable_set_undo( netsnmp_request_group * );

saHpiSensorReadingCurrentTable_context * saHpiSensorReadingCurrentTable_duplicate_row( saHpiSensorReadingCurrentTable_context* );
netsnmp_index * saHpiSensorReadingCurrentTable_delete_row( saHpiSensorReadingCurrentTable_context* );

int saHpiSensorReadingCurrentTable_can_activate(saHpiSensorReadingCurrentTable_context *undo_ctx,
                      saHpiSensorReadingCurrentTable_context *row_ctx,
                      netsnmp_request_group * rg);
int saHpiSensorReadingCurrentTable_can_deactivate(saHpiSensorReadingCurrentTable_context *undo_ctx,
                        saHpiSensorReadingCurrentTable_context *row_ctx,
                        netsnmp_request_group * rg);
int saHpiSensorReadingCurrentTable_can_delete(saHpiSensorReadingCurrentTable_context *undo_ctx,
                    saHpiSensorReadingCurrentTable_context *row_ctx,
                    netsnmp_request_group * rg);
    
    
#ifdef saHpiSensorReadingCurrentTable_ROW_CREATION
saHpiSensorReadingCurrentTable_context * saHpiSensorReadingCurrentTable_create_row( netsnmp_index* );
#endif
#endif

#ifdef saHpiSensorReadingCurrentTable_IDX2
saHpiSensorReadingCurrentTable_context * saHpiSensorReadingCurrentTable_get( const char *name, int len );
#endif

#ifdef __cplusplus
};
#endif

#endif /** SAHPISENSORREADINGCURRENTTABLE_H */
