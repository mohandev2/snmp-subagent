/*
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.array-user.conf,v 5.18.2.2 2004/02/09 18:21:47 rstory Exp $
 *
 * $Id$
 *
 * Yes, there is lots of code here that you might not use. But it is much
 * easier to remove code than to add it!
 */
#ifndef SAHPISOFTWAREEVENTTABLE_H
#define SAHPISOFTWAREEVENTTABLE_H

#ifdef __cplusplus
extern "C" {
#endif

    
#include <net-snmp/net-snmp-config.h>
#include <net-snmp/library/container.h>
#include <net-snmp/agent/table_array.h>

        /** Index saHpiDomainId is external */
        /** Index saHpiResourceId is external */
        /** Index saHpiEventSeverity is external */
        /** Index saHpiSoftwareEventEntryId is internal */

typedef struct saHpiSoftwareEventTable_context_s {
    netsnmp_index index; /** THIS MUST BE FIRST!!! */

    /*************************************************************
     * You can store data internally in this structure.
     *
     * TODO: You will probably have to fix a few types here...
     */
    /** TODO: add storage for external index(s)! */
        /** SaHpiEntryId = ASN_UNSIGNED */
            unsigned long saHpiSoftwareEventEntryId;

        /** SaHpiTime = ASN_COUNTER64 */
    /** TODO: Is this type correct? */
            long saHpiSoftwareEventTimestamp;

        /** SaHpiManufacturerId = ASN_UNSIGNED */
            unsigned long saHpiSoftwareEventManufacturerIdT;

        /** INTEGER = ASN_INTEGER */
            long saHpiSoftwareEventType;

        /** SaHpiTextType = ASN_INTEGER */
            long saHpiSoftwareEventTextType;

        /** SaHpiTextLanguage = ASN_INTEGER */
            long saHpiSoftwareEventTextLanguage;

        /** SaHpiText = ASN_OCTET_STR */
            unsigned char saHpiSoftwareEventText[SAHPI_MAX_TEXT_BUFFER_LENGTH];
            long saHpiSoftwareEventText_len;


    /*
     * OR
     *
     * Keep a pointer to your data
     */
    void * data;

    /*
     *add anything else you want here
     */

} saHpiSoftwareEventTable_context;

/*************************************************************
 * function declarations
 */
void init_saHpiSoftwareEventTable(void);
void initialize_table_saHpiSoftwareEventTable(void);
const saHpiSoftwareEventTable_context * saHpiSoftwareEventTable_get_by_idx(netsnmp_index *);
const saHpiSoftwareEventTable_context * saHpiSoftwareEventTable_get_by_idx_rs(netsnmp_index *,
                                        int row_status);
int saHpiSoftwareEventTable_get_value(netsnmp_request_info *, netsnmp_index *, netsnmp_table_request_info *);


/*************************************************************
 * function declarations: OpenHpi
 */
SaErrorT populate_saHpiSoftwareEventTable(SaHpiSessionIdT sessionid,
                                          SaHpiEventT *event,
                                          oid * event_oid, 
                                          size_t *event_oid_len);


/*************************************************************
 * oid declarations
 */
extern oid saHpiSoftwareEventTable_oid[];
extern size_t saHpiSoftwareEventTable_oid_len;

#define saHpiSoftwareEventTable_TABLE_OID 1,3,6,1,4,1,18568,2,1,1,3,1,24
    
/*************************************************************
 * column number definitions for table saHpiSoftwareEventTable
 */

#define SOFTWARE_EVENT_INDEX_NR 4
#define COLUMN_SAHPISOFTWAREEVENTENTRYID 1
#define COLUMN_SAHPISOFTWAREEVENTTIMESTAMP 2
#define COLUMN_SAHPISOFTWAREEVENTMANUFACTURERIDT 3
#define COLUMN_SAHPISOFTWAREEVENTTYPE 4
#define COLUMN_SAHPISOFTWAREEVENTTEXTTYPE 5
#define COLUMN_SAHPISOFTWAREEVENTTEXTLANGUAGE 6
#define COLUMN_SAHPISOFTWAREEVENTTEXT 7
#define saHpiSoftwareEventTable_COL_MIN 2
#define saHpiSoftwareEventTable_COL_MAX 7

/* comment out the following line if you don't handle SET-REQUEST for saHpiSoftwareEventTable */
#define saHpiSoftwareEventTable_SET_HANDLING

/* comment out the following line if you can't create new rows */
#define saHpiSoftwareEventTable_ROW_CREATION

/* comment out the following line if you don't want the secondary index */
#define saHpiSoftwareEventTable_IDX2

/* uncommend the following line if you allow modifications to an
 * active row */
/** define saHpiSoftwareEventTable_CAN_MODIFY_ACTIVE_ROW */

#ifdef saHpiSoftwareEventTable_SET_HANDLING

int saHpiSoftwareEventTable_extract_index( saHpiSoftwareEventTable_context * ctx, netsnmp_index * hdr );

void saHpiSoftwareEventTable_set_reserve1( netsnmp_request_group * );
void saHpiSoftwareEventTable_set_reserve2( netsnmp_request_group * );
void saHpiSoftwareEventTable_set_action( netsnmp_request_group * );
void saHpiSoftwareEventTable_set_commit( netsnmp_request_group * );
void saHpiSoftwareEventTable_set_free( netsnmp_request_group * );
void saHpiSoftwareEventTable_set_undo( netsnmp_request_group * );

saHpiSoftwareEventTable_context * saHpiSoftwareEventTable_duplicate_row( saHpiSoftwareEventTable_context* );
netsnmp_index * saHpiSoftwareEventTable_delete_row( saHpiSoftwareEventTable_context* );

int saHpiSoftwareEventTable_can_activate(saHpiSoftwareEventTable_context *undo_ctx,
                      saHpiSoftwareEventTable_context *row_ctx,
                      netsnmp_request_group * rg);
int saHpiSoftwareEventTable_can_deactivate(saHpiSoftwareEventTable_context *undo_ctx,
                        saHpiSoftwareEventTable_context *row_ctx,
                        netsnmp_request_group * rg);
int saHpiSoftwareEventTable_can_delete(saHpiSoftwareEventTable_context *undo_ctx,
                    saHpiSoftwareEventTable_context *row_ctx,
                    netsnmp_request_group * rg);
    
    
#ifdef saHpiSoftwareEventTable_ROW_CREATION
saHpiSoftwareEventTable_context * saHpiSoftwareEventTable_create_row( netsnmp_index* );
#endif
#endif

#ifdef saHpiSoftwareEventTable_IDX2
saHpiSoftwareEventTable_context * saHpiSoftwareEventTable_get( const char *name, int len );
#endif

#ifdef __cplusplus
};
#endif

#endif /** SAHPISOFTWAREEVENTTABLE_H */
