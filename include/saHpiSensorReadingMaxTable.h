/*
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.array-user.conf,v 5.18.2.2 2004/02/09 18:21:47 rstory Exp $
 *
 * $Id$
 *
 * Yes, there is lots of code here that you might not use. But it is much
 * easier to remove code than to add it!
 */
#ifndef SAHPISENSORREADINGMAXTABLE_H
#define SAHPISENSORREADINGMAXTABLE_H

#ifdef __cplusplus
extern "C" {
#endif


#include <net-snmp/net-snmp-config.h>
#include <net-snmp/library/container.h>
#include <net-snmp/agent/table_array.h>

/** Index saHpiDomainId is external */
/** Index saHpiResourceId is external */
/** Index saHpiResourceIsHistorical is external */
/** Index saHpiSensorNum is external */

typedef struct saHpiSensorReadingMaxTable_context_s {
	netsnmp_index index; /** THIS MUST BE FIRST!!! */

	/*************************************************************
	 * You can store data internally in this structure.
	 *
	 * TODO: You will probably have to fix a few types here...
	 */
	/** TODO: add storage for external index(s)! */
	/** TruthValue = ASN_INTEGER */
	long saHpiSensorReadingMaxIsSupported;

	/** SaHpiSensorReadingType = ASN_INTEGER */
	long saHpiSensorReadingMaxType;

	/** SaHpiSensorReadingValue = ASN_OCTET_STR */
	unsigned char saHpiSensorReadingMaxValue[SAHPI_SENSOR_BUFFER_LENGTH];
	long saHpiSensorReadingMaxValue_len;


	/*
	 * OR
	 *
	 * Keep a pointer to your data
	 */
	void * data;

	/*
	 *add anything else you want here
	 */

} saHpiSensorReadingMaxTable_context;


/*
 * SaErrorT populate_sensor_max()
 */
SaErrorT populate_sensor_max(SaHpiSessionIdT sessionid, 
				     SaHpiRdrT *rdr_entry,
				     SaHpiRptEntryT *rpt_entry);


/*************************************************************
 * function declarations
 */
void init_saHpiSensorReadingMaxTable(void);
void initialize_table_saHpiSensorReadingMaxTable(void);
const saHpiSensorReadingMaxTable_context * saHpiSensorReadingMaxTable_get_by_idx(netsnmp_index *);
const saHpiSensorReadingMaxTable_context * saHpiSensorReadingMaxTable_get_by_idx_rs(netsnmp_index *,
										    int row_status);
int saHpiSensorReadingMaxTable_get_value(netsnmp_request_info *, netsnmp_index *, netsnmp_table_request_info *);


/*************************************************************
 * oid declarations
 */
extern oid saHpiSensorReadingMaxTable_oid[];
extern size_t saHpiSensorReadingMaxTable_oid_len;

#define saHpiSensorReadingMaxTable_TABLE_OID 1,3,6,1,4,1,18568,2,1,1,4,9,4

/* Number of table Indexes */
#define SENSOR_READING_MAX_INDEX_NR 4 

/*************************************************************
 * column number definitions for table saHpiSensorReadingMaxTable
 */
#define COLUMN_SAHPISENSORREADINGMAXISSUPPORTED 1
#define COLUMN_SAHPISENSORREADINGMAXTYPE 2
#define COLUMN_SAHPISENSORREADINGMAXVALUE 3
#define saHpiSensorReadingMaxTable_COL_MIN 1
#define saHpiSensorReadingMaxTable_COL_MAX 3


int saHpiSensorReadingMaxTable_extract_index( saHpiSensorReadingMaxTable_context * ctx, netsnmp_index * hdr );

void saHpiSensorReadingMaxTable_set_reserve1( netsnmp_request_group * );
void saHpiSensorReadingMaxTable_set_reserve2( netsnmp_request_group * );
void saHpiSensorReadingMaxTable_set_action( netsnmp_request_group * );
void saHpiSensorReadingMaxTable_set_commit( netsnmp_request_group * );
void saHpiSensorReadingMaxTable_set_free( netsnmp_request_group * );
void saHpiSensorReadingMaxTable_set_undo( netsnmp_request_group * );

saHpiSensorReadingMaxTable_context * saHpiSensorReadingMaxTable_duplicate_row( saHpiSensorReadingMaxTable_context* );
netsnmp_index * saHpiSensorReadingMaxTable_delete_row( saHpiSensorReadingMaxTable_context* );

int saHpiSensorReadingMaxTable_can_activate(saHpiSensorReadingMaxTable_context *undo_ctx,
					    saHpiSensorReadingMaxTable_context *row_ctx,
					    netsnmp_request_group * rg);
int saHpiSensorReadingMaxTable_can_deactivate(saHpiSensorReadingMaxTable_context *undo_ctx,
					      saHpiSensorReadingMaxTable_context *row_ctx,
					      netsnmp_request_group * rg);
int saHpiSensorReadingMaxTable_can_delete(saHpiSensorReadingMaxTable_context *undo_ctx,
					  saHpiSensorReadingMaxTable_context *row_ctx,
					  netsnmp_request_group * rg);


saHpiSensorReadingMaxTable_context * saHpiSensorReadingMaxTable_create_row( netsnmp_index* );

saHpiSensorReadingMaxTable_context * saHpiSensorReadingMaxTable_get( const char *name, int len );

#ifdef __cplusplus
};
#endif

#endif /** SAHPISENSORREADINGMAXTABLE_H */
