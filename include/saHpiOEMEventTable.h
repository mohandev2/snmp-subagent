/*
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.array-user.conf,v 5.18.2.2 2004/02/09 18:21:47 rstory Exp $
 *
 * $Id$
 *
 * Yes, there is lots of code here that you might not use. But it is much
 * easier to remove code than to add it!
 */
#ifndef SAHPIOEMEVENTTABLE_H
#define SAHPIOEMEVENTTABLE_H

#ifdef __cplusplus
extern "C" {
#endif

    
#include <net-snmp/net-snmp-config.h>
#include <net-snmp/library/container.h>
#include <net-snmp/agent/table_array.h>

        /** Index saHpiDomainId is external */
        /** Index saHpiResourceId is external */
        /** Index saHpiEventSeverity is external */
        /** Index saHpiOEMEventEntryId is internal */

typedef struct saHpiOEMEventTable_context_s {
    netsnmp_index index; /** THIS MUST BE FIRST!!! */

    /*************************************************************
     * You can store data internally in this structure.
     *
     * TODO: You will probably have to fix a few types here...
     */
    /** TODO: add storage for external index(s)! */
        /** SaHpiEntryId = ASN_UNSIGNED */
            unsigned long saHpiOEMEventEntryId;

        /** SaHpiTime = ASN_COUNTER64 */
    /** TODO: Is this type correct? */
            struct counter64 saHpiOEMEventTimestamp;

        /** SaHpiManufacturerId = ASN_UNSIGNED */
            unsigned long saHpiOEMEventManufacturerIdT;

        /** SaHpiTextType = ASN_INTEGER */
            long saHpiOEMEventTextType;

        /** SaHpiTextLanguage = ASN_INTEGER */
            long saHpiOEMEventTextLanguage;

        /** SaHpiText = ASN_OCTET_STR */
            unsigned char saHpiOEMEventText[SAHPI_MAX_TEXT_BUFFER_LENGTH];
            long saHpiOEMEventText_len;


    /*
     * OR
     *
     * Keep a pointer to your data
     */
    void * data;

    /*
     *add anything else you want here
     */

} saHpiOEMEventTable_context;

/*************************************************************
 * function declarations
 */
void init_saHpiOEMEventTable(void);
void initialize_table_saHpiOEMEventTable(void);
const saHpiOEMEventTable_context * saHpiOEMEventTable_get_by_idx(netsnmp_index *);
const saHpiOEMEventTable_context * saHpiOEMEventTable_get_by_idx_rs(netsnmp_index *,
                                        int row_status);
int saHpiOEMEventTable_get_value(netsnmp_request_info *, netsnmp_index *, netsnmp_table_request_info *);

/*************************************************************
 * function declarations: OpenHpi
 */
SaErrorT populate_saHpiOemEventTable(SaHpiSessionIdT sessionid,
                                        SaHpiEventT *event,
                                        oid * event_oid, 
                                        size_t *event_oid_len);
SaErrorT async_oem_event_add(SaHpiSessionIdT sessionid, 
                       SaHpiEventT *event,
		       SaHpiRdrT *rdr,
		       SaHpiRptEntryT *rpt_entry,
                       oid * this_child_oid, 
                       size_t *this_child_oid_len);


/*************************************************************
 * oid declarations
 */
extern oid saHpiOEMEventTable_oid[];
extern size_t saHpiOEMEventTable_oid_len;

#define saHpiOEMEventTable_TABLE_OID 1,3,6,1,4,1,18568,2,1,1,3,1,27
    
/*************************************************************
 * column number definitions for table saHpiOEMEventTable
 */
 
#define OEM_EVENT_INDEX_NR 4
#define COLUMN_SAHPIOEMEVENTENTRYID 1
#define COLUMN_SAHPIOEMEVENTTIMESTAMP 2
#define COLUMN_SAHPIOEMEVENTMANUFACTURERIDT 3
#define COLUMN_SAHPIOEMEVENTTEXTTYPE 4
#define COLUMN_SAHPIOEMEVENTTEXTLANGUAGE 5
#define COLUMN_SAHPIOEMEVENTTEXT 6
#define saHpiOEMEventTable_COL_MIN 2
#define saHpiOEMEventTable_COL_MAX 6

/* uncommend the following line if you allow modifications to an
 * active row */
/** define saHpiOEMEventTable_CAN_MODIFY_ACTIVE_ROW */

int saHpiOEMEventTable_extract_index( saHpiOEMEventTable_context * ctx, netsnmp_index * hdr );

void saHpiOEMEventTable_set_reserve1( netsnmp_request_group * );
void saHpiOEMEventTable_set_reserve2( netsnmp_request_group * );
void saHpiOEMEventTable_set_action( netsnmp_request_group * );
void saHpiOEMEventTable_set_commit( netsnmp_request_group * );
void saHpiOEMEventTable_set_free( netsnmp_request_group * );
void saHpiOEMEventTable_set_undo( netsnmp_request_group * );

saHpiOEMEventTable_context * saHpiOEMEventTable_duplicate_row( saHpiOEMEventTable_context* );
netsnmp_index * saHpiOEMEventTable_delete_row( saHpiOEMEventTable_context* );

int saHpiOEMEventTable_can_activate(saHpiOEMEventTable_context *undo_ctx,
                      saHpiOEMEventTable_context *row_ctx,
                      netsnmp_request_group * rg);
int saHpiOEMEventTable_can_deactivate(saHpiOEMEventTable_context *undo_ctx,
                        saHpiOEMEventTable_context *row_ctx,
                        netsnmp_request_group * rg);
int saHpiOEMEventTable_can_delete(saHpiOEMEventTable_context *undo_ctx,
                    saHpiOEMEventTable_context *row_ctx,
                    netsnmp_request_group * rg);
    
    
saHpiOEMEventTable_context * saHpiOEMEventTable_create_row( netsnmp_index* );

saHpiOEMEventTable_context * saHpiOEMEventTable_get( const char *name, int len );

#ifdef __cplusplus
};
#endif

#endif /** SAHPIOEMEVENTTABLE_H */
