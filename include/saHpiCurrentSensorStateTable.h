/*
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.array-user.conf,v 5.18.2.2 2004/02/09 18:21:47 rstory Exp $
 *
 * $Id$
 *
 * Yes, there is lots of code here that you might not use. But it is much
 * easier to remove code than to add it!
 */
#ifndef SAHPICURRENTSENSORSTATETABLE_H
#define SAHPICURRENTSENSORSTATETABLE_H

#ifdef __cplusplus
extern "C" {
#endif

    
#include <net-snmp/net-snmp-config.h>
#include <net-snmp/library/container.h>
#include <net-snmp/agent/table_array.h>

        /** Index saHpiDomainId is external */
        /** Index saHpiResourceId is external */
        /** Index saHpiSensorNum is external */

typedef struct saHpiCurrentSensorStateTable_context_s {
    netsnmp_index index; /** THIS MUST BE FIRST!!! */

    /*************************************************************
     * You can store data internally in this structure.
     *
     * TODO: You will probably have to fix a few types here...
     */
    /** TODO: add storage for external index(s)! */
        /** INTEGER = ASN_INTEGER */
            long saHpiCurrentSensorStateDataPresent;

        /** SaHpiSensorReadingType = ASN_INTEGER */
            long saHpiCurrentSensorStateType;

        /** SaHpiSensorReadingValue = ASN_OCTET_STR */
            unsigned char saHpiCurrentSensorStateValue[65535];
            long saHpiCurrentSensorStateValue_len;

        /** SaHpiEventState = ASN_OCTET_STR */
            unsigned char saHpiCurrentSensorStateEventState[65535];
            long saHpiCurrentSensorStateEventState_len;

        /** TruthValue = ASN_INTEGER */
            long saHpiCurrentSensorStateSensorEnable;

        /** TruthValue = ASN_INTEGER */
            long saHpiCurrentSensorStateEventEnable;

        /** SaHpiEventState = ASN_OCTET_STR */
            unsigned char saHpiCurrentSensorStateAssertEventMask[65535];
            long saHpiCurrentSensorStateAssertEventMask_len;

        /** SaHpiEventState = ASN_OCTET_STR */
            unsigned char saHpiCurrentSensorStateDeassertEventMask[65535];
            long saHpiCurrentSensorStateDeassertEventMask_len;


    /*
     * OR
     *
     * Keep a pointer to your data
     */
    void * data;

    /*
     *add anything else you want here
     */

} saHpiCurrentSensorStateTable_context;

/*************************************************************
 * function declarations
 */
void init_saHpiCurrentSensorStateTable(void);
void initialize_table_saHpiCurrentSensorStateTable(void);
const saHpiCurrentSensorStateTable_context * saHpiCurrentSensorStateTable_get_by_idx(netsnmp_index *);
const saHpiCurrentSensorStateTable_context * saHpiCurrentSensorStateTable_get_by_idx_rs(netsnmp_index *,
                                        int row_status);
int saHpiCurrentSensorStateTable_get_value(netsnmp_request_info *, netsnmp_index *, netsnmp_table_request_info *);


/*************************************************************
 * oid declarations
 */
extern oid saHpiCurrentSensorStateTable_oid[];
extern size_t saHpiCurrentSensorStateTable_oid_len;

#define saHpiCurrentSensorStateTable_TABLE_OID 1,3,6,1,4,1,18568,2,1,1,4,9,3
    
/*************************************************************
 * column number definitions for table saHpiCurrentSensorStateTable
 */
#define COLUMN_SAHPICURRENTSENSORSTATEDATAPRESENT 1
#define COLUMN_SAHPICURRENTSENSORSTATETYPE 2
#define COLUMN_SAHPICURRENTSENSORSTATEVALUE 3
#define COLUMN_SAHPICURRENTSENSORSTATEEVENTSTATE 4
#define COLUMN_SAHPICURRENTSENSORSTATESENSORENABLE 5
#define COLUMN_SAHPICURRENTSENSORSTATEEVENTENABLE 6
#define COLUMN_SAHPICURRENTSENSORSTATEASSERTEVENTMASK 7
#define COLUMN_SAHPICURRENTSENSORSTATEDEASSERTEVENTMASK 8
#define saHpiCurrentSensorStateTable_COL_MIN 1
#define saHpiCurrentSensorStateTable_COL_MAX 8

/* comment out the following line if you don't handle SET-REQUEST for saHpiCurrentSensorStateTable */
#define saHpiCurrentSensorStateTable_SET_HANDLING

/* comment out the following line if you can't create new rows */
#define saHpiCurrentSensorStateTable_ROW_CREATION

/* comment out the following line if you don't want the secondary index */
#define saHpiCurrentSensorStateTable_IDX2

/* uncommend the following line if you allow modifications to an
 * active row */
/** define saHpiCurrentSensorStateTable_CAN_MODIFY_ACTIVE_ROW */

#ifdef saHpiCurrentSensorStateTable_SET_HANDLING

int saHpiCurrentSensorStateTable_extract_index( saHpiCurrentSensorStateTable_context * ctx, netsnmp_index * hdr );

void saHpiCurrentSensorStateTable_set_reserve1( netsnmp_request_group * );
void saHpiCurrentSensorStateTable_set_reserve2( netsnmp_request_group * );
void saHpiCurrentSensorStateTable_set_action( netsnmp_request_group * );
void saHpiCurrentSensorStateTable_set_commit( netsnmp_request_group * );
void saHpiCurrentSensorStateTable_set_free( netsnmp_request_group * );
void saHpiCurrentSensorStateTable_set_undo( netsnmp_request_group * );

saHpiCurrentSensorStateTable_context * saHpiCurrentSensorStateTable_duplicate_row( saHpiCurrentSensorStateTable_context* );
netsnmp_index * saHpiCurrentSensorStateTable_delete_row( saHpiCurrentSensorStateTable_context* );

int saHpiCurrentSensorStateTable_can_activate(saHpiCurrentSensorStateTable_context *undo_ctx,
                      saHpiCurrentSensorStateTable_context *row_ctx,
                      netsnmp_request_group * rg);
int saHpiCurrentSensorStateTable_can_deactivate(saHpiCurrentSensorStateTable_context *undo_ctx,
                        saHpiCurrentSensorStateTable_context *row_ctx,
                        netsnmp_request_group * rg);
int saHpiCurrentSensorStateTable_can_delete(saHpiCurrentSensorStateTable_context *undo_ctx,
                    saHpiCurrentSensorStateTable_context *row_ctx,
                    netsnmp_request_group * rg);
    
    
#ifdef saHpiCurrentSensorStateTable_ROW_CREATION
saHpiCurrentSensorStateTable_context * saHpiCurrentSensorStateTable_create_row( netsnmp_index* );
#endif
#endif

#ifdef saHpiCurrentSensorStateTable_IDX2
saHpiCurrentSensorStateTable_context * saHpiCurrentSensorStateTable_get( const char *name, int len );
#endif

#ifdef __cplusplus
};
#endif

#endif /** SAHPICURRENTSENSORSTATETABLE_H */
