/*
* (C) Copyright IBM Corp. 2003
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  This
 * file and program are licensed under a BSD style license.  See
 * the Copying file included with the OpenHPI distribution for
 * full licensing terms.
 *
 * Authors:
 *   Konrad Rzeszutek <konradr@us.ibm.com>
 *
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.array-user.conf,v 5.15.2.1 2003/02/27 05:59:41 rstory Exp $
 *
 * $Id$
 *
 */
#ifndef SAHPIHOTSWAPTABLE_H
#define SAHPIHOTSWAPTABLE_H

#ifdef __cplusplus
extern          "C" {
#endif


#include <net-snmp/net-snmp-config.h>
#include <net-snmp/library/container.h>
#include <net-snmp/agent/table_array.h>
#include <SaHpi.h>
#include <hpiSubagent.h>

        /** Index saHpiDomainID is external */
        /** Index saHpiResourceID is external */

    typedef struct saHpiHotSwapTable_context_s {
        netsnmp_index   index;
                         /** THIS MUST BE FIRST!!! */

    
        /** INTEGER = ASN_INTEGER */
        long            saHpiHotSwapIndicator;

        /** INTEGER = ASN_INTEGER */
        long            saHpiPowerState;

        /** INTEGER = ASN_INTEGER */
        long            saHpiResetState;

        /** INTEGER = ASN_INTEGER */
        long            saHpiHotSwapState;

        /** INTEGER = ASN_INTEGER */
        long            saHpiPreviousHotSwapState;

        /** INTEGER = ASN_INTEGER */
        long            saHpiHotSwapEventSeverity;

        /** UNSIGNED32 = ASN_UNSIGNED */
        unsigned long   saHpiInsertTimeout;

        /** UNSIGNED32 = ASN_UNSIGNED */
        unsigned long   saHpiExtractTimeout;

        /** INTEGER = ASN_INTEGER */
        long            saHpiActionRequest;

        /** RowPointer = ASN_OBJECT_ID */
        oid             saHpiHotSwapRTP[MAX_OID_LEN];
        long            saHpiHotSwapRTP_len;


        long resource_id;
        long domain_id;
	long hash;
        

    } saHpiHotSwapTable_context;

/*************************************************************
 * function declarations
 */
   
    void            initialize_table_saHpiHotSwapTable(void);
  /*
    const saHpiHotSwapTable_context
        *saHpiHotSwapTable_get_by_idx(netsnmp_index *);

    const saHpiHotSwapTable_context
        *saHpiHotSwapTable_get_by_idx_rs(netsnmp_index *, int row_status);
	*/
    int             saHpiHotSwapTable_get_value(netsnmp_request_info *,
                                                netsnmp_index *,
                                                netsnmp_table_request_info
                                                *);


/*************************************************************
 * oid declarations
 */
    extern oid      saHpiHotSwapTable_oid[];
    extern size_t   saHpiHotSwapTable_oid_len;

  //1,3,6,1,3,90,2,4
  // IBM-KR: Fix this. Should be in hpiResources
#define saHpiHotSwapTable_TABLE_OID hpiEvents_OID,4


/*************************************************************
 * column number definitions for table saHpiHotSwapTable
 */
#define COLUMN_SAHPIHOTSWAPINDICATOR 1
#define COLUMN_SAHPIPOWERSTATE 2
#define COLUMN_SAHPIRESETSTATE 3
#define COLUMN_SAHPIHOTSWAPSTATE 4
#define COLUMN_SAHPIPREVIOUSHOTSWAPSTATE 5
#define COLUMN_SAHPIHOTSWAPEVENTSEVERITY 6
#define COLUMN_SAHPIINSERTTIMEOUT 7
#define COLUMN_SAHPIEXTRACTTIMEOUT 8
#define COLUMN_SAHPIACTIONREQUEST 9
#define COLUMN_SAHPIHOTSWAPRTP 10
#define saHpiHotSwapTable_COL_MIN 1
#define saHpiHotSwapTable_COL_MAX 10

   

    int            
        saHpiHotSwapTable_extract_index(saHpiHotSwapTable_context * ctx,
                                        netsnmp_index * hdr);

    void            saHpiHotSwapTable_set_reserve1(netsnmp_request_group
                                                   *);
    void            saHpiHotSwapTable_set_reserve2(netsnmp_request_group
                                                   *);
    void            saHpiHotSwapTable_set_action(netsnmp_request_group *);
    void            saHpiHotSwapTable_set_commit(netsnmp_request_group *);
    void            saHpiHotSwapTable_set_free(netsnmp_request_group *);
    void            saHpiHotSwapTable_set_undo(netsnmp_request_group *);

    saHpiHotSwapTable_context
        *saHpiHotSwapTable_duplicate_row(saHpiHotSwapTable_context *);
    netsnmp_index  *saHpiHotSwapTable_delete_row(saHpiHotSwapTable_context
                                                 *);

    int            
        saHpiHotSwapTable_can_activate(saHpiHotSwapTable_context *
                                       undo_ctx,
                                       saHpiHotSwapTable_context * row_ctx,
                                       netsnmp_request_group * rg);
    int            
        saHpiHotSwapTable_can_deactivate(saHpiHotSwapTable_context *
                                         undo_ctx,
                                         saHpiHotSwapTable_context *
                                         row_ctx,
                                         netsnmp_request_group * rg);

    int             saHpiHotSwapTable_can_delete(saHpiHotSwapTable_context
                                                 * undo_ctx,
                                                 saHpiHotSwapTable_context
                                                 * row_ctx,
                                                 netsnmp_request_group *
                                                 rg);


  saHpiHotSwapTable_context *saHpiHotSwapTable_create_row(netsnmp_index *hdr);
 
    saHpiHotSwapTable_context *saHpiHotSwapTable_get(const char *name,
                                                     int len);


#ifdef __cplusplus
};
#endif

#endif /** SAHPIHOTSWAPTABLE_H */
